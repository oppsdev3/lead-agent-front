{"ast":null,"code":"import * as React from 'react';\n/**\n * @hidden\n */\n\nvar VirtualScroll =\n/** @class */\nfunction () {\n  function VirtualScroll(cached) {\n    this.containerHeight = 0;\n    this.topCacheCount = 0; // 4;\n\n    this.attendedSkip = 0; // -4;\n\n    this.propsSkip = 0;\n    this.total = 0;\n    this.scrollableVirtual = false;\n    this.realSkip = 0;\n    this.pageSize = 0;\n    this.heightContainer = null;\n    this.fixedScroll = false;\n    this.askedSkip = undefined;\n    this.containerRef = React.createRef();\n    this.prevScrollPos = 0;\n    this.tableTranslate = 0;\n    this.scrollSyncing = false;\n\n    if (cached) {\n      this.topCacheCount = 4;\n      this.attendedSkip = -this.topCacheCount;\n    }\n\n    this.scrollHandler = this.scrollHandler.bind(this);\n  }\n\n  Object.defineProperty(VirtualScroll.prototype, \"container\", {\n    get: function () {\n      return this.containerRef.current;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(VirtualScroll.prototype, \"rowHeights\", {\n    /**\n     * @return - The row heights in an array.\n     */\n    get: function () {\n      var result = [];\n      var allRows = this.tableBody && this.tableBody.children || [];\n      var accumulate = 0;\n\n      for (var i = 0; i < allRows.length; i++) {\n        if (allRows[i].className.indexOf('k-grouping-row') > -1) {\n          accumulate += allRows[i].scrollHeight;\n          continue;\n        }\n\n        if (allRows[i].className.indexOf('k-detail-row') > -1) {\n          result[result.length - 1].line += allRows[i].scrollHeight;\n        } else {\n          result.push({\n            line: allRows[i].scrollHeight,\n            acc: accumulate\n          });\n          accumulate = 0;\n        }\n      }\n\n      return result;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  VirtualScroll.prototype.changePage = function (skip, e) {\n    this.attendedSkip = skip - this.topCacheCount;\n    this.PageChange({\n      skip: Math.max(0, skip - this.topCacheCount),\n      take: this.pageSize\n    }, e);\n  };\n\n  VirtualScroll.prototype.translate = function (dY) {\n    this.tableTranslate = dY;\n\n    if (this.scrollableVirtual && this.table) {\n      this.table.style.transform = 'translateY(' + dY + 'px)';\n    }\n  };\n\n  VirtualScroll.prototype.syncScroll = function () {\n    if (!this.scrollableVirtual || !this.container) {\n      return;\n    }\n\n    this.syncTimeout = null;\n    var scrollTop = this.container.scrollTop;\n    var containerHeight = this.containerHeight; // = this.container.scrollHeight;\n\n    var rowHeights = this.rowHeights;\n    var percentage = (scrollTop - this.tableTranslate) / rowHeights[0].line;\n    var targetFloorScrollPosition = Math.floor(containerHeight * (this.propsSkip + percentage) / this.total);\n\n    if (this.container.scrollTop !== (this.prevScrollPos = targetFloorScrollPosition)) {\n      this.scrollSyncing = true;\n      this.container.scrollTop = this.prevScrollPos = targetFloorScrollPosition;\n    }\n\n    this.translate(this.tableTranslate + targetFloorScrollPosition - scrollTop);\n  };\n\n  VirtualScroll.prototype.reset = function () {\n    this.scrollSyncing = true;\n\n    if (this.fixedScroll) {\n      return;\n    }\n\n    if (this.container) {\n      this.container.scrollTop = 0;\n    }\n\n    this.translate(0);\n  };\n\n  VirtualScroll.prototype.localScrollUp = function (e) {\n    if (!this.container) {\n      return;\n    }\n\n    var heights = this.rowHeights;\n    var scrollTop = this.container.scrollTop;\n    var targetTranslate = this.tableTranslate;\n    var rowsCount = 0;\n    var additionalOnTop = scrollTop - targetTranslate;\n\n    if (additionalOnTop > 0) {\n      return;\n    }\n\n    while (rowsCount < this.topCacheCount + this.attendedSkip - this.realSkip && this.propsSkip - rowsCount > 0 && !(targetTranslate + (heights[heights.length - 1 - rowsCount].line + heights[heights.length - 1 - rowsCount].acc) + additionalOnTop <= scrollTop)) {\n      targetTranslate -= heights[heights.length - 1 - rowsCount].line + heights[heights.length - 1 - rowsCount].acc;\n      rowsCount++;\n    }\n\n    if (rowsCount === 0 && this.topCacheCount === 0 && this.attendedSkip > 0) {\n      // allows local scrolling up, when top caching is disabled\n      // for variable heights 'topCacheCount' should be atleast 1 to avoid flickering\n      targetTranslate = Math.max(targetTranslate - heights[0].line, 0);\n      rowsCount = 1;\n    }\n\n    if (this.propsSkip - rowsCount <= 0 && targetTranslate > scrollTop) {\n      this.translate(0);\n      this.changePage(0, e);\n      this.container.scrollTop = 0;\n      return;\n    }\n\n    if (targetTranslate > scrollTop) {\n      targetTranslate = scrollTop; // need to handle these cases\n      // if the item height is not available:\n      //    floor the translate to beginning of the item in absolute value\n    }\n\n    if (targetTranslate !== this.tableTranslate) {\n      this.translate(targetTranslate);\n      this.changePage(this.propsSkip - rowsCount, e);\n    }\n  };\n\n  VirtualScroll.prototype.localScrollDown = function (e) {\n    if (!this.container) {\n      return;\n    }\n\n    var heights = this.rowHeights;\n    var scrollTop = this.container.scrollTop;\n    var targetTranslate = this.tableTranslate;\n    var rowsCount = 0;\n\n    while (rowsCount < heights.length - this.topCacheCount && !(targetTranslate + heights[rowsCount].line + heights[rowsCount].acc > scrollTop)) {\n      targetTranslate += heights[rowsCount].line + heights[rowsCount].acc;\n      rowsCount++;\n    }\n\n    if (rowsCount >= heights.length - this.topCacheCount && this.propsSkip + rowsCount >= this.total) {\n      this.translate(targetTranslate);\n      this.changePage(this.total - 1, e);\n    } else if (targetTranslate !== this.tableTranslate) {\n      this.translate(targetTranslate);\n      this.changePage(this.propsSkip + rowsCount, e);\n    }\n  };\n\n  VirtualScroll.prototype.scrollNonStrict = function (e) {\n    var floatRowIndex = this.total * this.prevScrollPos / this.containerHeight;\n    var rowIndex = Math.floor(floatRowIndex);\n\n    if (rowIndex >= this.total) {\n      rowIndex = this.total - 1;\n    }\n\n    var rowpercentage = Math.min(floatRowIndex - rowIndex, 1);\n    var microAdjust = 0;\n    var rowIndexOffset = rowIndex - this.propsSkip;\n    var heights = this.rowHeights;\n\n    if (rowIndexOffset >= 0 && rowIndexOffset <= 1) {\n      microAdjust = -((heights[0].line + heights[0].acc) * rowpercentage);\n    } else if (rowIndexOffset === -1) {\n      microAdjust = -((heights[heights.length - 1].line + heights[heights.length - 1].acc) * rowpercentage);\n    }\n\n    this.translate(microAdjust + this.containerHeight * floatRowIndex / this.total);\n    this.changePage(rowIndex, e);\n  };\n\n  VirtualScroll.prototype.scrollHandler = function (e) {\n    if (!this.scrollableVirtual) {\n      return;\n    }\n\n    if (this.scrollSyncing || !this.container || !this.table) {\n      this.scrollSyncing = false;\n      return;\n    }\n\n    var grid = this;\n    clearTimeout(this.syncTimeout);\n    this.syncTimeout = window.setTimeout(function () {\n      grid.syncScroll();\n    }, 200);\n    var scrollTop = this.container.scrollTop;\n    var prev = this.prevScrollPos;\n    this.prevScrollPos = scrollTop;\n\n    if (this.askedSkip !== undefined) {\n      this.translate(this.containerHeight * this.askedSkip / this.total);\n      this.changePage(this.askedSkip, e);\n      this.prevScrollPos = scrollTop;\n      this.askedSkip = undefined;\n      return;\n    }\n\n    if (scrollTop - prev < 0 && scrollTop > this.tableTranslate - this.table.scrollHeight / 10) {\n      this.localScrollUp(e);\n    } else if (scrollTop - prev > 0 && scrollTop < this.tableTranslate + this.table.scrollHeight * 2 / 3) {\n      this.localScrollDown(e);\n    } else {\n      this.scrollNonStrict(e);\n    }\n\n    this.prevScrollPos = scrollTop;\n  };\n\n  return VirtualScroll;\n}();\n\nexport { VirtualScroll };","map":{"version":3,"sources":["C:/Users/Admin/LeadManagement/frontend/node_modules/@progress/kendo-react-grid/dist/es/VirtualScroll.js"],"names":["React","VirtualScroll","cached","containerHeight","topCacheCount","attendedSkip","propsSkip","total","scrollableVirtual","realSkip","pageSize","heightContainer","fixedScroll","askedSkip","undefined","containerRef","createRef","prevScrollPos","tableTranslate","scrollSyncing","scrollHandler","bind","Object","defineProperty","prototype","get","current","enumerable","configurable","result","allRows","tableBody","children","accumulate","i","length","className","indexOf","scrollHeight","line","push","acc","changePage","skip","e","PageChange","Math","max","take","translate","dY","table","style","transform","syncScroll","container","syncTimeout","scrollTop","rowHeights","percentage","targetFloorScrollPosition","floor","reset","localScrollUp","heights","targetTranslate","rowsCount","additionalOnTop","localScrollDown","scrollNonStrict","floatRowIndex","rowIndex","rowpercentage","min","microAdjust","rowIndexOffset","grid","clearTimeout","window","setTimeout","prev"],"mappings":"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","sourcesContent":["import * as React from 'react';\n/**\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    function VirtualScroll(cached) {\n        this.containerHeight = 0;\n        this.topCacheCount = 0; // 4;\n        this.attendedSkip = 0; // -4;\n        this.propsSkip = 0;\n        this.total = 0;\n        this.scrollableVirtual = false;\n        this.realSkip = 0;\n        this.pageSize = 0;\n        this.heightContainer = null;\n        this.fixedScroll = false;\n        this.askedSkip = undefined;\n        this.containerRef = React.createRef();\n        this.prevScrollPos = 0;\n        this.tableTranslate = 0;\n        this.scrollSyncing = false;\n        if (cached) {\n            this.topCacheCount = 4;\n            this.attendedSkip = -this.topCacheCount;\n        }\n        this.scrollHandler = this.scrollHandler.bind(this);\n    }\n    Object.defineProperty(VirtualScroll.prototype, \"container\", {\n        get: function () {\n            return this.containerRef.current;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VirtualScroll.prototype, \"rowHeights\", {\n        /**\n         * @return - The row heights in an array.\n         */\n        get: function () {\n            var result = [];\n            var allRows = this.tableBody && this.tableBody.children || [];\n            var accumulate = 0;\n            for (var i = 0; i < allRows.length; i++) {\n                if (allRows[i].className.indexOf('k-grouping-row') > -1) {\n                    accumulate += allRows[i].scrollHeight;\n                    continue;\n                }\n                if (allRows[i].className.indexOf('k-detail-row') > -1) {\n                    result[result.length - 1].line += allRows[i].scrollHeight;\n                }\n                else {\n                    result.push({\n                        line: allRows[i].scrollHeight,\n                        acc: accumulate\n                    });\n                    accumulate = 0;\n                }\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    VirtualScroll.prototype.changePage = function (skip, e) {\n        this.attendedSkip = skip - this.topCacheCount;\n        this.PageChange({\n            skip: Math.max(0, skip - this.topCacheCount),\n            take: this.pageSize\n        }, e);\n    };\n    VirtualScroll.prototype.translate = function (dY) {\n        this.tableTranslate = dY;\n        if (this.scrollableVirtual && this.table) {\n            this.table.style.transform = 'translateY(' + dY + 'px)';\n        }\n    };\n    VirtualScroll.prototype.syncScroll = function () {\n        if (!this.scrollableVirtual || !this.container) {\n            return;\n        }\n        this.syncTimeout = null;\n        var scrollTop = this.container.scrollTop;\n        var containerHeight = this.containerHeight; // = this.container.scrollHeight;\n        var rowHeights = this.rowHeights;\n        var percentage = (scrollTop - this.tableTranslate) / rowHeights[0].line;\n        var targetFloorScrollPosition = Math.floor((containerHeight) * (this.propsSkip + percentage) / this.total);\n        if (this.container.scrollTop !== (this.prevScrollPos = targetFloorScrollPosition)) {\n            this.scrollSyncing = true;\n            this.container.scrollTop = (this.prevScrollPos = targetFloorScrollPosition);\n        }\n        this.translate(this.tableTranslate + targetFloorScrollPosition - scrollTop);\n    };\n    VirtualScroll.prototype.reset = function () {\n        this.scrollSyncing = true;\n        if (this.fixedScroll) {\n            return;\n        }\n        if (this.container) {\n            this.container.scrollTop = 0;\n        }\n        this.translate(0);\n    };\n    VirtualScroll.prototype.localScrollUp = function (e) {\n        if (!this.container) {\n            return;\n        }\n        var heights = this.rowHeights;\n        var scrollTop = this.container.scrollTop;\n        var targetTranslate = this.tableTranslate;\n        var rowsCount = 0;\n        var additionalOnTop = scrollTop - targetTranslate;\n        if (additionalOnTop > 0) {\n            return;\n        }\n        while ((rowsCount < this.topCacheCount + this.attendedSkip - this.realSkip)\n            && this.propsSkip - rowsCount > 0 &&\n            !(targetTranslate + (heights[heights.length - 1 - rowsCount].line + heights[heights.length - 1 - rowsCount].acc) + additionalOnTop <= scrollTop)) {\n            targetTranslate -= heights[heights.length - 1 - rowsCount].line +\n                heights[heights.length - 1 - rowsCount].acc;\n            rowsCount++;\n        }\n        if (rowsCount === 0 && this.topCacheCount === 0 && this.attendedSkip > 0) {\n            // allows local scrolling up, when top caching is disabled\n            // for variable heights 'topCacheCount' should be atleast 1 to avoid flickering\n            targetTranslate = Math.max(targetTranslate - heights[0].line, 0);\n            rowsCount = 1;\n        }\n        if (this.propsSkip - rowsCount <= 0 && targetTranslate > scrollTop) {\n            this.translate(0);\n            this.changePage(0, e);\n            this.container.scrollTop = 0;\n            return;\n        }\n        if (targetTranslate > scrollTop) {\n            targetTranslate = scrollTop;\n            // need to handle these cases\n            // if the item height is not available:\n            //    floor the translate to beginning of the item in absolute value\n        }\n        if (targetTranslate !== this.tableTranslate) {\n            this.translate(targetTranslate);\n            this.changePage(this.propsSkip - rowsCount, e);\n        }\n    };\n    VirtualScroll.prototype.localScrollDown = function (e) {\n        if (!this.container) {\n            return;\n        }\n        var heights = this.rowHeights;\n        var scrollTop = this.container.scrollTop;\n        var targetTranslate = this.tableTranslate;\n        var rowsCount = 0;\n        while (rowsCount < heights.length - this.topCacheCount &&\n            !(targetTranslate + heights[rowsCount].line + heights[rowsCount].acc > scrollTop)) {\n            targetTranslate += heights[rowsCount].line + heights[rowsCount].acc;\n            rowsCount++;\n        }\n        if (rowsCount >= heights.length - this.topCacheCount && this.propsSkip + rowsCount >= this.total) {\n            this.translate(targetTranslate);\n            this.changePage(this.total - 1, e);\n        }\n        else if (targetTranslate !== this.tableTranslate) {\n            this.translate(targetTranslate);\n            this.changePage(this.propsSkip + rowsCount, e);\n        }\n    };\n    VirtualScroll.prototype.scrollNonStrict = function (e) {\n        var floatRowIndex = this.total * this.prevScrollPos / (this.containerHeight);\n        var rowIndex = Math.floor(floatRowIndex);\n        if (rowIndex >= this.total) {\n            rowIndex = this.total - 1;\n        }\n        var rowpercentage = Math.min(floatRowIndex - rowIndex, 1);\n        var microAdjust = 0;\n        var rowIndexOffset = rowIndex - this.propsSkip;\n        var heights = this.rowHeights;\n        if (rowIndexOffset >= 0 && rowIndexOffset <= 1) {\n            microAdjust = -((heights[0].line + heights[0].acc) * rowpercentage);\n        }\n        else if (rowIndexOffset === -1) {\n            microAdjust = -((heights[heights.length - 1].line + heights[heights.length - 1].acc) * rowpercentage);\n        }\n        this.translate(microAdjust + this.containerHeight * floatRowIndex / this.total);\n        this.changePage(rowIndex, e);\n    };\n    VirtualScroll.prototype.scrollHandler = function (e) {\n        if (!this.scrollableVirtual) {\n            return;\n        }\n        if (this.scrollSyncing || !this.container || !this.table) {\n            this.scrollSyncing = false;\n            return;\n        }\n        var grid = this;\n        clearTimeout(this.syncTimeout);\n        this.syncTimeout = window.setTimeout(function () { grid.syncScroll(); }, 200);\n        var scrollTop = this.container.scrollTop;\n        var prev = this.prevScrollPos;\n        this.prevScrollPos = scrollTop;\n        if (this.askedSkip !== undefined) {\n            this.translate(this.containerHeight * this.askedSkip / this.total);\n            this.changePage(this.askedSkip, e);\n            this.prevScrollPos = scrollTop;\n            this.askedSkip = undefined;\n            return;\n        }\n        if (scrollTop - prev < 0 && scrollTop > this.tableTranslate - this.table.scrollHeight / 10) {\n            this.localScrollUp(e);\n        }\n        else if (scrollTop - prev > 0 && scrollTop < this.tableTranslate + this.table.scrollHeight * 2 / 3) {\n            this.localScrollDown(e);\n        }\n        else {\n            this.scrollNonStrict(e);\n        }\n        this.prevScrollPos = scrollTop;\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\n"]},"metadata":{},"sourceType":"module"}