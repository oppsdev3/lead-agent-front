{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\LeadManagement\\\\frontend\\\\src\\\\components\\\\dashboard\\\\LeadStatusDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { DatePickerComponent, TimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\nimport './LeadStatus.css';\nimport PostLeadStatusDetails from './PostLeadStatusDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LeadStatusDetails() {\n  _s();\n\n  // const [user, setUser] = useState();\n  const [agentData, setAgentData] = useState();\n  const [didWeGetInfo, setDidWeGetInfo] = useState(false);\n  const params = useParams();\n\n  const handleInputs = e => {\n    console.log(e);\n  };\n\n  const callLeads = async () => {\n    try {\n      const res = await fetch(`/leads/leadstatus/${params.id}`, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      });\n      const data = await res.json();\n      console.log(\"data\", data);\n      setAgentData(data);\n      setDidWeGetInfo(true); // console.log(\"Agent data\",agentData);\n      // if(!res.status(200)){\n      //    return new Error(res.error);\n      // }\n\n      if (!res.status === 200) {\n        const error = new Error(res.error);\n        setDidWeGetInfo(false);\n        return error;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    callLeads();\n  }, []);\n\n  const conditionalRendering = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PostLeadStatusDetails, {\n        agent: agentData\n      }, !!agentData && agentData.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this); // if (didWeGetInfo === 'true') {\n    //     return (\n    //         <div>\n    //             <PostLeadStatusDetails agent={ agentData} key={agentData.id} />\n    //         </div>\n    //     )\n    // } else {\n    //     return (\n    //         <div >\n    //             <p>Oops! No such page exists!</p>\n    //         </div>\n    //     );\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: conditionalRendering()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LeadStatusDetails, \"sknODbnCv5DE+UNrWqs6dgcthFA=\", false, function () {\n  return [useParams];\n});\n\n_c = LeadStatusDetails;\nexport default LeadStatusDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeadStatusDetails\");","map":{"version":3,"sources":["C:/Users/Admin/LeadManagement/frontend/src/components/dashboard/LeadStatusDetails.js"],"names":["React","useState","useEffect","useParams","DatePickerComponent","TimePickerComponent","PostLeadStatusDetails","LeadStatusDetails","agentData","setAgentData","didWeGetInfo","setDidWeGetInfo","params","handleInputs","e","console","log","callLeads","res","fetch","id","method","headers","Accept","credentials","data","json","status","error","Error","err","conditionalRendering"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,iCAAzD;AACA,OAAO,kBAAP;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;;AAEA,SAASC,iBAAT,GAA6B;AAAA;;AAE1B;AAEC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMW,MAAM,GAAGT,SAAS,EAAxB;;AAEC,QAAMU,YAAY,GAAIC,CAAD,IAAO;AAEzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAEH,GAJA;;AAOG,QAAMG,SAAS,GAAG,YAAW;AAC7B,QAAG;AACC,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,qBAAoBP,MAAM,CAACQ,EAAG,EAAhC,EAAmC;AACtDC,QAAAA,MAAM,EAAE,KAD8C;AAEtDC,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,kBADH;AAEL,0BAAiB;AAFZ,SAF6C;AAMtDC,QAAAA,WAAW,EAAE;AANyC,OAAnC,CAAvB;AASA,YAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBS,IAApB;AACAhB,MAAAA,YAAY,CAACgB,IAAD,CAAZ;AACAd,MAAAA,eAAe,CAAC,IAAD,CAAf,CAbD,CAcC;AAEA;AACA;AACA;;AACA,UAAI,CAACO,GAAG,CAACS,MAAL,KAAgB,GAApB,EAAyB;AACrB,cAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUX,GAAG,CAACU,KAAd,CAAd;AACAjB,QAAAA,eAAe,CAAC,KAAD,CAAf;AACA,eAAOiB,KAAP;AACH;AAEJ,KAzBD,CAyBE,OAAME,GAAN,EAAW;AACTf,MAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACH;AACJ,GA7BG;;AA+BJ5B,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMc,oBAAoB,GAAG,MAAM;AAE/B,wBACQ;AAAA,6BACI,QAAC,qBAAD;AAAuB,QAAA,KAAK,EAAGvB;AAA/B,SAAiD,CAAC,CAACA,SAAF,IAAgBA,SAAS,CAACY,EAA3E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADR,CAF+B,CAQ/B;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAxBD;;AA2BF,sBAEE;AAAA,cAEAW,oBAAoB;AAFpB;AAAA;AAAA;AAAA;AAAA,UAFF;AAqID;;GApNQxB,iB;UAOUJ,S;;;KAPVI,iB;AAsNT,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { DatePickerComponent, TimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\r\nimport './LeadStatus.css';\r\nimport PostLeadStatusDetails from './PostLeadStatusDetails';\r\n\r\nfunction LeadStatusDetails() {\r\n\r\n   // const [user, setUser] = useState();\r\n\r\n    const [agentData, setAgentData] = useState();\r\n    const [didWeGetInfo, setDidWeGetInfo] = useState(false);\r\n\r\n    const params = useParams();\r\n\r\n     const handleInputs = (e) => {\r\n\r\n        console.log(e);\r\n       \r\n    }\r\n\r\n\r\n        const callLeads = async() => {\r\n        try{\r\n            const res = await fetch(`/leads/leadstatus/${params.id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                credentials: \"include\"\r\n            });\r\n\r\n            const data = await res.json();\r\n            console.log(\"data\", data);\r\n            setAgentData(data);\r\n            setDidWeGetInfo(true);\r\n            // console.log(\"Agent data\",agentData);\r\n\r\n            // if(!res.status(200)){\r\n            //    return new Error(res.error);\r\n            // }\r\n            if (!res.status === 200 ){\r\n                const error = new Error(res.error);\r\n                setDidWeGetInfo(false);\r\n                return error;\r\n            }\r\n\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        callLeads();\r\n    }, []);\r\n\r\n\r\n    const conditionalRendering = () => {\r\n\r\n        return (\r\n                <div> \r\n                    <PostLeadStatusDetails agent={ agentData } key={ !!agentData  && agentData.id }  />\r\n                </div>\r\n            )\r\n\r\n        // if (didWeGetInfo === 'true') {\r\n        //     return (\r\n        //         <div>\r\n\r\n        //             <PostLeadStatusDetails agent={ agentData} key={agentData.id} />\r\n\r\n\r\n        //         </div>\r\n        //     )\r\n        // } else {\r\n        //     return (\r\n        //         <div >\r\n        //             <p>Oops! No such page exists!</p>\r\n        //         </div>\r\n        //     );\r\n        // }\r\n    }\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n   {conditionalRendering()}\r\n    {/* <div>LeadStatusDetails</div> */}\r\n\r\n                             \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    {/* <div>\r\n                {\r\n                    !!agentData &&\r\n                    agentData.map((agent) =>\r\n\r\n                         <form >\r\n\r\n\r\n                            <div className={'body-container'}>\r\n\r\n\r\n\r\n                            <div className={\"row\"}>\r\n                                <div className={\"col\"}>\r\n                                    <div className={\"form-group\"}>\r\n                                        <label style={{ marginRight: \"70%\" }} htmlFor=\"exampleFormControlInput1\">First Name</label>\r\n                                        <input type=\"name\" name={\"firstname\"} className=\"form-control\" id=\"exampleFormControlInput1\"\r\n                                            placeholder=\"first name\" value={agent.firstname} onChange={handleInputs} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className={\"col\"}>\r\n                                    <div className={\"form-group\"}>\r\n                                        <label style={{ marginRight: \"70%\" }} htmlFor=\"exampleFormControlInput1\">Last Name</label>\r\n                                        <input type=\"name\" name={\"lastname\"} className=\"form-control\" id=\"exampleFormControlInput2\"\r\n                                            placeholder=\"last name\" value={agent.lastname} onChange={handleInputs} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={\"row\"}>\r\n                                <div className={\"col\"}>\r\n                                    <div className={\"form-group\"}>\r\n                                        <label style={{ marginRight: \"70%\" }} htmlFor=\"exampleFormControlInput1\">Email</label>\r\n                                        <input type=\"email\" name={\"email\"} className=\"form-control\" id=\"exampleFormControlInput3\"\r\n                                            placeholder=\"username@email.com\" value={agent.email} onChange={handleInputs}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={\"col\"}>\r\n                                    <div className={\"form-group\"}>\r\n                                        <label style={{ marginRight: \"70%\" }} htmlFor=\"exampleFormControlInput1\">Phone Number</label>\r\n                                        <input type=\"number\" name={\"phonenumber\"} className=\"form-control\" id=\"exampleFormControlInput4\"\r\n                                            placeholder=\"phone number\" value={agent.phonenumber} onChange={handleInputs}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={\"row\"}>\r\n                                <div className={\"col\"}>\r\n                                    <div className={\"form-group\"}>\r\n                                        <label style={{ marginRight: \"70%\", marginTop: \"2vh\" }} htmlFor=\"exampleFormControlInput1\">Interested Course</label>\r\n                                        <input type=\"name\" name={\"interestedcourse\"} className=\"form-control\" id=\"exampleFormControlInput5\"\r\n                                            placeholder=\"course name\" value={agent.interestedcourse} onChange={handleInputs}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={\"col\"}>\r\n                                    <div className={\"form-group\"}>\r\n                                        <label style={{ marginRight: \"70%\", marginTop: \"2vh\"}} htmlFor=\"exampleFormControlInput1\"> Enter College Name </label>\r\n                                        <input type=\"name\" name={\"collegename\"} className=\"form-control\" id=\"exampleFormControlInput6\"\r\n                                            placeholder=\"college name\" value={agent.collegename} onChange={handleInputs}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label style={{ marginRight: \"90%\" }} htmlFor=\"exampleFormControlSelect1\">Status</label>\r\n                                <select className=\"form-control\" name={\"status\"} id=\"exampleFormControlSelect1\" value={agent.status} onChange={handleInputs} >\r\n                                    <option>Need to call</option>\r\n                                    <option>Pending</option>\r\n                                    <option>Completed</option>\r\n                                </select>\r\n                            </div>\r\n\r\n\r\n                            <div className={\"row\"}>\r\n                                <div className={\"col\"}>\r\n                                    <div className={\"form-group\"}>\r\n                                        <label style={{ marginRight: \"80%\" }} htmlFor=\"exampleFormControlInput1\">Date</label>\r\n                                        <div>\r\n                                            <DatePickerComponent value={agent.date} name={\"date\"} onChange={handleInputs}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={\"col\"}>\r\n                                    <div className={\"form-group\"}>\r\n                                        <label style={{ marginRight: \"80%\" }} htmlFor=\"exampleFormControlInput1\">Time</label>\r\n                                        <div>\r\n                                            <TimePickerComponent value={agent.time} name={\"time\"} onChange={handleInputs}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"form-group\">\r\n                                <label style={{ marginRight: \"90%\", marginTop: \"3.5vh\" }} htmlFor=\"exampleFormControlTextarea1\">Add Notes</label>\r\n                                <textarea name={\"notes\"} className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" value={agent.notes} onChange={handleInputs}> </textarea>\r\n                            </div>\r\n\r\n                            </div>\r\n                            <br/>\r\n                            <br />\r\n\r\n                         </form>\r\n\r\n                    )\r\n                }\r\n            </div> */}\r\n\r\n </div>\r\n  )\r\n}\r\n\r\nexport default LeadStatusDetails"]},"metadata":{},"sourceType":"module"}