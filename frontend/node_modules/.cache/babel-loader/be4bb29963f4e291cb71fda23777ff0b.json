{"ast":null,"code":"// offsetWidth() is slowly transition to reporting double instead of integet in all browsers\n// during this process (which is a bit back-and-forth) we need to make sure we are working across all browsers and versions\nvar OFFSET_ROUND = 1;\n/**\n * @hidden\n */\n\nvar ColumnResize =\n/** @class */\nfunction () {\n  function ColumnResize(triggerResize) {\n    var _this = this;\n    /**\n     * The settings for resizing the Grid.\n     */\n\n\n    this.resizable = false;\n    this.isRtl = false;\n\n    this.setIsRtl = function (isRtl) {\n      _this.isRtl = isRtl;\n    };\n\n    this.dragHandler = function (event, column, dragCue, end) {\n      var e = event.originalEvent;\n\n      if (!end) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n\n      var tdElement = dragCue.parentElement;\n\n      if (!tdElement || !tdElement.parentElement) {\n        return;\n      }\n\n      var oldWidth = tdElement.clientWidth;\n      var newWidth = oldWidth;\n\n      if (_this.isRtl) {\n        newWidth += dragCue.getBoundingClientRect().right - dragCue.offsetWidth / 2 - event.clientX;\n      } else {\n        newWidth += event.clientX - dragCue.getBoundingClientRect().left - dragCue.offsetWidth / 2;\n      }\n\n      if (!end && Math.abs(newWidth - oldWidth) < 1) {\n        return;\n      }\n\n      _this.fixateInitialWidths(tdElement.parentElement.clientWidth);\n\n      _this.setWidths(column, Math.floor(newWidth) / oldWidth);\n\n      var index = _this.columns.filter(function (c) {\n        return !c.children.length;\n      }).findIndex(function (c) {\n        return c.id === column.id;\n      });\n\n      _this.onResize(index, oldWidth, newWidth, e, end, column.id);\n    };\n\n    this.dblClickHandler = function (event, columnIds) {\n      var columns = _this.columns.filter(function (c) {\n        return columnIds.indexOf(c.id) > -1;\n      });\n\n      if (!_this.colGroupMain || !columns.length) {\n        return;\n      }\n\n      var leafsForAdjust = {};\n      var stack = columns;\n\n      while (stack.length > 0) {\n        var currentCol = stack.pop();\n\n        if (!currentCol) {\n          break;\n        }\n\n        if (currentCol.children.length) {\n          stack.push.apply(stack, currentCol.children);\n        } else {\n          leafsForAdjust[currentCol.id] = currentCol;\n        }\n      }\n\n      var leafs = _this.columns.filter(function (c) {\n        return !c.children.length;\n      });\n\n      var indexesForAdjust = [];\n      leafs.forEach(function (currentColumn, index) {\n        if (leafsForAdjust[currentColumn.id]) {\n          indexesForAdjust.push(index);\n        }\n      });\n      var tables = [_this.colGroupMain.parentElement];\n      var colgroups = [_this.colGroupMain];\n\n      if (_this.colGroupHeader) {\n        tables.push(_this.colGroupHeader.parentElement);\n        colgroups.push(_this.colGroupHeader);\n      }\n\n      if (_this.colGroupFooter) {\n        tables.push(_this.colGroupFooter.parentElement);\n        colgroups.push(_this.colGroupFooter);\n      }\n\n      tables.forEach(function (table) {\n        return table.classList.add('k-autofitting');\n      });\n      var maxWidths = [];\n      colgroups.forEach(function (colgroup) {\n        indexesForAdjust.forEach(function (columnIndex) {\n          if (colgroup.children[columnIndex]) {\n            colgroup.children[columnIndex].width = '';\n            maxWidths[columnIndex] = Math.max(maxWidths[columnIndex] || 0, colgroup.children[columnIndex].offsetWidth + OFFSET_ROUND);\n          }\n        });\n      });\n      colgroups.forEach(function (colgroup) {\n        indexesForAdjust.forEach(function (columnIndex) {\n          if (colgroup.children[columnIndex]) {\n            colgroup.children[columnIndex].width = maxWidths[columnIndex] + 'px';\n            leafs[columnIndex].width = maxWidths[columnIndex];\n          }\n        });\n      });\n      tables.forEach(function (table) {\n        return table.classList.remove('k-autofitting');\n      });\n\n      _this.onResize(indexesForAdjust[0], 0, 0, event, true, columnIds[0]);\n    };\n\n    this.updateColElements = function (affectedColumns) {\n      var leafColumns = _this.columns.filter(function (c) {\n        return !c.children.length;\n      });\n\n      var difference = 1e-10;\n\n      var _loop_1 = function (i) {\n        var currentColumn = affectedColumns[i];\n        var colIndex = leafColumns.findIndex(function (c) {\n          return c.id === currentColumn.id;\n        });\n        var currentColumnFloatWidth = parseFloat((currentColumn.width || 0).toString());\n        var currentColumnFloorWidth = Math.floor(currentColumnFloatWidth);\n        difference += currentColumnFloatWidth - currentColumnFloorWidth;\n        var currentWidth = currentColumnFloorWidth + Math.floor(difference);\n        difference -= Math.floor(difference);\n\n        if (_this.colGroupMain && _this.colGroupMain.children[colIndex]) {\n          _this.colGroupMain.children[colIndex].width = currentWidth + 'px';\n        }\n\n        if (_this.colGroupHeader && _this.colGroupHeader.children[colIndex]) {\n          // static headers\n          _this.colGroupHeader.children[colIndex].width = currentWidth + 'px';\n        }\n\n        if (_this.colGroupFooter && _this.colGroupFooter.children[colIndex]) {\n          // static footers\n          _this.colGroupFooter.children[colIndex].width = currentWidth + 'px';\n        }\n      };\n\n      for (var i = 0; i < affectedColumns.length; i++) {\n        _loop_1(i);\n      }\n    };\n\n    this.onResize = triggerResize;\n  }\n\n  ColumnResize.prototype.fixateInitialWidths = function (width) {\n    var columns = this.columns.filter(function (c) {\n      return !c.children.length;\n    });\n    var remainingCount = 0;\n    var cols = this.colGroupMain ? this.colGroupMain.children : [];\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].width) {\n        width -= parseFloat(cols[i].width);\n      } else {\n        remainingCount++;\n      }\n    }\n\n    if (remainingCount === 0) {\n      return;\n    }\n\n    var perCol = Math.floor(width / remainingCount);\n\n    for (var i = 0; i < cols.length; i++) {\n      var col = cols[i];\n\n      if (!col.width) {\n        col.width = perCol;\n        columns[i].width = perCol.toString();\n\n        if (this.colGroupHeader) {\n          this.colGroupHeader.children[i].width = perCol;\n        }\n\n        if (this.colGroupFooter) {\n          this.colGroupFooter.children[i].width = perCol;\n        }\n      }\n    }\n  };\n\n  ColumnResize.prototype.setWidths = function (column, coef) {\n    var indexInOriginal = this.columns.findIndex(function (c) {\n      return c.id === column.id;\n    });\n    var toAdjust = [];\n    var more = column.children.length;\n\n    for (var i = indexInOriginal + 1; more > 0 && i < this.columns.length; i++, more--) {\n      var cc = this.columns[i];\n\n      if (!cc.children.length) {\n        toAdjust.push(cc);\n      } else {\n        more += cc.children.length;\n      }\n    }\n\n    if (toAdjust.length === 0) {\n      toAdjust.push(column);\n    }\n\n    toAdjust.forEach(function (colToAdjust) {\n      var targetWidth = colToAdjust.width ? parseFloat(colToAdjust.width.toString()) * coef : 0;\n      var min = colToAdjust.minResizableWidth === undefined ? 10 : colToAdjust.minResizableWidth;\n\n      if (targetWidth < min) {\n        targetWidth = min;\n      }\n\n      colToAdjust.width = targetWidth;\n    });\n    this.updateColElements(toAdjust);\n    return toAdjust;\n  };\n\n  return ColumnResize;\n}();\n\nexport { ColumnResize };","map":{"version":3,"sources":["C:/Users/Admin/LeadManagement/frontend/node_modules/@progress/kendo-react-grid/dist/es/drag/ColumnResize.js"],"names":["OFFSET_ROUND","ColumnResize","triggerResize","_this","resizable","isRtl","setIsRtl","dragHandler","event","column","dragCue","end","e","originalEvent","preventDefault","stopPropagation","stopImmediatePropagation","tdElement","parentElement","oldWidth","clientWidth","newWidth","getBoundingClientRect","right","offsetWidth","clientX","left","Math","abs","fixateInitialWidths","setWidths","floor","index","columns","filter","c","children","length","findIndex","id","onResize","dblClickHandler","columnIds","indexOf","colGroupMain","leafsForAdjust","stack","currentCol","pop","push","apply","leafs","indexesForAdjust","forEach","currentColumn","tables","colgroups","colGroupHeader","colGroupFooter","table","classList","add","maxWidths","colgroup","columnIndex","width","max","remove","updateColElements","affectedColumns","leafColumns","difference","_loop_1","i","colIndex","currentColumnFloatWidth","parseFloat","toString","currentColumnFloorWidth","currentWidth","prototype","remainingCount","cols","perCol","col","coef","indexInOriginal","toAdjust","more","cc","colToAdjust","targetWidth","min","minResizableWidth","undefined"],"mappings":"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","sourcesContent":["// offsetWidth() is slowly transition to reporting double instead of integet in all browsers\n// during this process (which is a bit back-and-forth) we need to make sure we are working across all browsers and versions\nvar OFFSET_ROUND = 1;\n/**\n * @hidden\n */\nvar ColumnResize = /** @class */ (function () {\n    function ColumnResize(triggerResize) {\n        var _this = this;\n        /**\n         * The settings for resizing the Grid.\n         */\n        this.resizable = false;\n        this.isRtl = false;\n        this.setIsRtl = function (isRtl) {\n            _this.isRtl = isRtl;\n        };\n        this.dragHandler = function (event, column, dragCue, end) {\n            var e = event.originalEvent;\n            if (!end) {\n                e.preventDefault();\n                e.stopPropagation();\n                e.stopImmediatePropagation();\n            }\n            var tdElement = dragCue.parentElement;\n            if (!tdElement || !tdElement.parentElement) {\n                return;\n            }\n            var oldWidth = tdElement.clientWidth;\n            var newWidth = oldWidth;\n            if (_this.isRtl) {\n                newWidth += (dragCue.getBoundingClientRect().right - (dragCue.offsetWidth / 2)) - event.clientX;\n            }\n            else {\n                newWidth += event.clientX - dragCue.getBoundingClientRect().left - (dragCue.offsetWidth / 2);\n            }\n            if (!end && Math.abs(newWidth - oldWidth) < 1) {\n                return;\n            }\n            _this.fixateInitialWidths(tdElement.parentElement.clientWidth);\n            _this.setWidths(column, Math.floor(newWidth) / oldWidth);\n            var index = _this.columns.filter(function (c) { return !c.children.length; }).findIndex(function (c) { return c.id === column.id; });\n            _this.onResize(index, oldWidth, newWidth, e, end, column.id);\n        };\n        this.dblClickHandler = function (event, columnIds) {\n            var columns = _this.columns.filter(function (c) { return columnIds.indexOf(c.id) > -1; });\n            if (!_this.colGroupMain || !columns.length) {\n                return;\n            }\n            var leafsForAdjust = {};\n            var stack = columns;\n            while (stack.length > 0) {\n                var currentCol = stack.pop();\n                if (!currentCol) {\n                    break;\n                }\n                if (currentCol.children.length) {\n                    stack.push.apply(stack, currentCol.children);\n                }\n                else {\n                    leafsForAdjust[currentCol.id] = currentCol;\n                }\n            }\n            var leafs = _this.columns.filter(function (c) { return !c.children.length; });\n            var indexesForAdjust = [];\n            leafs.forEach(function (currentColumn, index) {\n                if (leafsForAdjust[currentColumn.id]) {\n                    indexesForAdjust.push(index);\n                }\n            });\n            var tables = [_this.colGroupMain.parentElement];\n            var colgroups = [_this.colGroupMain];\n            if (_this.colGroupHeader) {\n                tables.push(_this.colGroupHeader.parentElement);\n                colgroups.push(_this.colGroupHeader);\n            }\n            if (_this.colGroupFooter) {\n                tables.push(_this.colGroupFooter.parentElement);\n                colgroups.push(_this.colGroupFooter);\n            }\n            tables.forEach(function (table) { return table.classList.add('k-autofitting'); });\n            var maxWidths = [];\n            colgroups.forEach(function (colgroup) {\n                indexesForAdjust.forEach(function (columnIndex) {\n                    if (colgroup.children[columnIndex]) {\n                        colgroup.children[columnIndex].width = '';\n                        maxWidths[columnIndex] = Math.max(maxWidths[columnIndex] || 0, colgroup.children[columnIndex].offsetWidth + OFFSET_ROUND);\n                    }\n                });\n            });\n            colgroups.forEach(function (colgroup) {\n                indexesForAdjust.forEach(function (columnIndex) {\n                    if (colgroup.children[columnIndex]) {\n                        colgroup.children[columnIndex].width = maxWidths[columnIndex] + 'px';\n                        leafs[columnIndex].width = maxWidths[columnIndex];\n                    }\n                });\n            });\n            tables.forEach(function (table) { return table.classList.remove('k-autofitting'); });\n            _this.onResize(indexesForAdjust[0], 0, 0, event, true, columnIds[0]);\n        };\n        this.updateColElements = function (affectedColumns) {\n            var leafColumns = _this.columns.filter(function (c) { return !c.children.length; });\n            var difference = 1e-10;\n            var _loop_1 = function (i) {\n                var currentColumn = affectedColumns[i];\n                var colIndex = leafColumns.findIndex(function (c) { return c.id === currentColumn.id; });\n                var currentColumnFloatWidth = parseFloat((currentColumn.width || 0).toString());\n                var currentColumnFloorWidth = Math.floor(currentColumnFloatWidth);\n                difference += currentColumnFloatWidth - currentColumnFloorWidth;\n                var currentWidth = currentColumnFloorWidth + Math.floor(difference);\n                difference -= Math.floor(difference);\n                if (_this.colGroupMain && _this.colGroupMain.children[colIndex]) {\n                    _this.colGroupMain.children[colIndex].width = currentWidth + 'px';\n                }\n                if (_this.colGroupHeader && _this.colGroupHeader.children[colIndex]) {\n                    // static headers\n                    _this.colGroupHeader.children[colIndex].width = currentWidth + 'px';\n                }\n                if (_this.colGroupFooter && _this.colGroupFooter.children[colIndex]) {\n                    // static footers\n                    _this.colGroupFooter.children[colIndex].width = currentWidth + 'px';\n                }\n            };\n            for (var i = 0; i < affectedColumns.length; i++) {\n                _loop_1(i);\n            }\n        };\n        this.onResize = triggerResize;\n    }\n    ColumnResize.prototype.fixateInitialWidths = function (width) {\n        var columns = this.columns.filter(function (c) { return !c.children.length; });\n        var remainingCount = 0;\n        var cols = this.colGroupMain ? this.colGroupMain.children : [];\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].width) {\n                width -= parseFloat(cols[i].width);\n            }\n            else {\n                remainingCount++;\n            }\n        }\n        if (remainingCount === 0) {\n            return;\n        }\n        var perCol = Math.floor(width / remainingCount);\n        for (var i = 0; i < cols.length; i++) {\n            var col = cols[i];\n            if (!col.width) {\n                col.width = perCol;\n                columns[i].width = perCol.toString();\n                if (this.colGroupHeader) {\n                    this.colGroupHeader.children[i].width = perCol;\n                }\n                if (this.colGroupFooter) {\n                    this.colGroupFooter.children[i].width = perCol;\n                }\n            }\n        }\n    };\n    ColumnResize.prototype.setWidths = function (column, coef) {\n        var indexInOriginal = this.columns.findIndex(function (c) { return c.id === column.id; });\n        var toAdjust = [];\n        var more = column.children.length;\n        for (var i = indexInOriginal + 1; more > 0 && i < this.columns.length; i++, more--) {\n            var cc = this.columns[i];\n            if (!cc.children.length) {\n                toAdjust.push(cc);\n            }\n            else {\n                more += cc.children.length;\n            }\n        }\n        if (toAdjust.length === 0) {\n            toAdjust.push(column);\n        }\n        toAdjust.forEach(function (colToAdjust) {\n            var targetWidth = colToAdjust.width ? parseFloat(colToAdjust.width.toString()) * coef : 0;\n            var min = colToAdjust.minResizableWidth === undefined ? 10 : colToAdjust.minResizableWidth;\n            if (targetWidth < min) {\n                targetWidth = min;\n            }\n            colToAdjust.width = targetWidth;\n        });\n        this.updateColElements(toAdjust);\n        return toAdjust;\n    };\n    return ColumnResize;\n}());\nexport { ColumnResize };\n"]},"metadata":{},"sourceType":"module"}