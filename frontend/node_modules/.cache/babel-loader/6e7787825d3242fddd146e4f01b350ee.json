{"ast":null,"code":"import * as React from 'react';\n/**\n * An utility function for asynchronous focus/blur handling.\n *\n * By default, the `onFocus` and `onBlur` callbacks are called every time a child components receives/loses focus.\n * Use this utility hook for scenarios where you need to know if the parent has received focus for the first time, or completely lost focus.\n *\n * @returns\n */\n\nexport function useAsyncFocusBlur(_a) {\n  var onFocus = _a.onFocus,\n      onBlur = _a.onBlur,\n      onSyncFocus = _a.onSyncFocus,\n      onSyncBlur = _a.onSyncBlur;\n  var focused = React.useRef(false);\n  var tick = React.useRef(0);\n  var nextTick = React.useCallback(function (f) {\n    clearTimeout(tick.current);\n    tick.current = window.setTimeout(function () {\n      return f();\n    });\n  }, [tick]);\n  var handleFocus = React.useCallback(function () {\n    var event = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      event[_i] = arguments[_i];\n    }\n\n    clearTimeout(tick.current);\n\n    if (onSyncFocus) {\n      onSyncFocus.call.apply(onSyncFocus, [undefined].concat(event));\n    }\n\n    if (focused.current) {\n      return;\n    }\n\n    ;\n    focused.current = true;\n\n    if (onFocus) {\n      onFocus.call.apply(onFocus, [undefined].concat(event));\n    }\n  }, [focused, onFocus, onSyncFocus]);\n  var handleBlur = React.useCallback(function () {\n    var event = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      event[_i] = arguments[_i];\n    }\n\n    if (onSyncBlur) {\n      onSyncBlur.call.apply(onSyncBlur, [undefined].concat(event));\n    }\n\n    nextTick(function () {\n      if (!focused.current) {\n        return;\n      }\n\n      if (onBlur) {\n        focused.current = false;\n        onBlur.call.apply(onBlur, [undefined].concat(event));\n      }\n    });\n  }, [focused, nextTick, onBlur, onSyncBlur]);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(tick.current);\n    };\n  }, []);\n  return {\n    onFocus: handleFocus,\n    onBlur: handleBlur\n  };\n}","map":{"version":3,"sources":["C:/Users/Admin/LeadManagement/frontend/node_modules/@progress/kendo-react-common/dist/es/hooks/useAsyncFocusBlur.js"],"names":["React","useAsyncFocusBlur","_a","onFocus","onBlur","onSyncFocus","onSyncBlur","focused","useRef","tick","nextTick","useCallback","f","clearTimeout","current","window","setTimeout","handleFocus","event","_i","arguments","length","call","apply","undefined","concat","handleBlur","useEffect"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,CAA2BC,EAA3B,EAA+B;AAClC,MAAIC,OAAO,GAAGD,EAAE,CAACC,OAAjB;AAAA,MAA0BC,MAAM,GAAGF,EAAE,CAACE,MAAtC;AAAA,MAA8CC,WAAW,GAAGH,EAAE,CAACG,WAA/D;AAAA,MAA4EC,UAAU,GAAGJ,EAAE,CAACI,UAA5F;AACA,MAAIC,OAAO,GAAGP,KAAK,CAACQ,MAAN,CAAa,KAAb,CAAd;AACA,MAAIC,IAAI,GAAGT,KAAK,CAACQ,MAAN,CAAa,CAAb,CAAX;AACA,MAAIE,QAAQ,GAAGV,KAAK,CAACW,WAAN,CAAkB,UAAUC,CAAV,EAAa;AAC1CC,IAAAA,YAAY,CAACJ,IAAI,CAACK,OAAN,CAAZ;AACAL,IAAAA,IAAI,CAACK,OAAL,GAAeC,MAAM,CAACC,UAAP,CAAkB,YAAY;AAAE,aAAOJ,CAAC,EAAR;AAAa,KAA7C,CAAf;AACH,GAHc,EAGZ,CAACH,IAAD,CAHY,CAAf;AAIA,MAAIQ,WAAW,GAAGjB,KAAK,CAACW,WAAN,CAAkB,YAAY;AAC5C,QAAIO,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,MAAAA,KAAK,CAACC,EAAD,CAAL,GAAYC,SAAS,CAACD,EAAD,CAArB;AACH;;AACDN,IAAAA,YAAY,CAACJ,IAAI,CAACK,OAAN,CAAZ;;AACA,QAAIT,WAAJ,EAAiB;AACbA,MAAAA,WAAW,CAACiB,IAAZ,CAAiBC,KAAjB,CAAuBlB,WAAvB,EAAoC,CAACmB,SAAD,EAAYC,MAAZ,CAAmBP,KAAnB,CAApC;AACH;;AACD,QAAIX,OAAO,CAACO,OAAZ,EAAqB;AACjB;AACH;;AACD;AACAP,IAAAA,OAAO,CAACO,OAAR,GAAkB,IAAlB;;AACA,QAAIX,OAAJ,EAAa;AACTA,MAAAA,OAAO,CAACmB,IAAR,CAAaC,KAAb,CAAmBpB,OAAnB,EAA4B,CAACqB,SAAD,EAAYC,MAAZ,CAAmBP,KAAnB,CAA5B;AACH;AACJ,GAjBiB,EAiBf,CAACX,OAAD,EAAUJ,OAAV,EAAmBE,WAAnB,CAjBe,CAAlB;AAkBA,MAAIqB,UAAU,GAAG1B,KAAK,CAACW,WAAN,CAAkB,YAAY;AAC3C,QAAIO,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,MAAAA,KAAK,CAACC,EAAD,CAAL,GAAYC,SAAS,CAACD,EAAD,CAArB;AACH;;AACD,QAAIb,UAAJ,EAAgB;AACZA,MAAAA,UAAU,CAACgB,IAAX,CAAgBC,KAAhB,CAAsBjB,UAAtB,EAAkC,CAACkB,SAAD,EAAYC,MAAZ,CAAmBP,KAAnB,CAAlC;AACH;;AACDR,IAAAA,QAAQ,CAAC,YAAY;AACjB,UAAI,CAACH,OAAO,CAACO,OAAb,EAAsB;AAClB;AACH;;AACD,UAAIV,MAAJ,EAAY;AACRG,QAAAA,OAAO,CAACO,OAAR,GAAkB,KAAlB;AACAV,QAAAA,MAAM,CAACkB,IAAP,CAAYC,KAAZ,CAAkBnB,MAAlB,EAA0B,CAACoB,SAAD,EAAYC,MAAZ,CAAmBP,KAAnB,CAA1B;AACH;AACJ,KARO,CAAR;AASH,GAjBgB,EAiBd,CAACX,OAAD,EAAUG,QAAV,EAAoBN,MAApB,EAA4BE,UAA5B,CAjBc,CAAjB;AAkBAN,EAAAA,KAAK,CAAC2B,SAAN,CAAgB,YAAY;AACxB,WAAO,YAAY;AACfd,MAAAA,YAAY,CAACJ,IAAI,CAACK,OAAN,CAAZ;AACH,KAFD;AAGH,GAJD,EAIG,EAJH;AAKA,SAAO;AACHX,IAAAA,OAAO,EAAEc,WADN;AAEHb,IAAAA,MAAM,EAAEsB;AAFL,GAAP;AAIH","sourcesContent":["import * as React from 'react';\n/**\n * An utility function for asynchronous focus/blur handling.\n *\n * By default, the `onFocus` and `onBlur` callbacks are called every time a child components receives/loses focus.\n * Use this utility hook for scenarios where you need to know if the parent has received focus for the first time, or completely lost focus.\n *\n * @returns\n */\nexport function useAsyncFocusBlur(_a) {\n    var onFocus = _a.onFocus, onBlur = _a.onBlur, onSyncFocus = _a.onSyncFocus, onSyncBlur = _a.onSyncBlur;\n    var focused = React.useRef(false);\n    var tick = React.useRef(0);\n    var nextTick = React.useCallback(function (f) {\n        clearTimeout(tick.current);\n        tick.current = window.setTimeout(function () { return f(); });\n    }, [tick]);\n    var handleFocus = React.useCallback(function () {\n        var event = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            event[_i] = arguments[_i];\n        }\n        clearTimeout(tick.current);\n        if (onSyncFocus) {\n            onSyncFocus.call.apply(onSyncFocus, [undefined].concat(event));\n        }\n        if (focused.current) {\n            return;\n        }\n        ;\n        focused.current = true;\n        if (onFocus) {\n            onFocus.call.apply(onFocus, [undefined].concat(event));\n        }\n    }, [focused, onFocus, onSyncFocus]);\n    var handleBlur = React.useCallback(function () {\n        var event = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            event[_i] = arguments[_i];\n        }\n        if (onSyncBlur) {\n            onSyncBlur.call.apply(onSyncBlur, [undefined].concat(event));\n        }\n        nextTick(function () {\n            if (!focused.current) {\n                return;\n            }\n            if (onBlur) {\n                focused.current = false;\n                onBlur.call.apply(onBlur, [undefined].concat(event));\n            }\n        });\n    }, [focused, nextTick, onBlur, onSyncBlur]);\n    React.useEffect(function () {\n        return function () {\n            clearTimeout(tick.current);\n        };\n    }, []);\n    return {\n        onFocus: handleFocus,\n        onBlur: handleBlur\n    };\n}\n"]},"metadata":{},"sourceType":"module"}