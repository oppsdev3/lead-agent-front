{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\LeadManagement\\\\frontend\\\\src\\\\components\\\\dashboard\\\\LeadStatusDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { DatePickerComponent, TimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\nimport './LeadStatus.css';\nimport PostLeadStatusDetails from './PostLeadStatusDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LeadStatusDetails() {\n  _s();\n\n  // const [user, setUser] = useState();\n  const [agentData, setAgentData] = useState();\n  const [didWeGetInfo, setDidWeGetInfo] = useState('loading');\n  const params = useParams();\n\n  const handleInputs = e => {\n    console.log(e);\n  };\n\n  const callLeads = async () => {\n    try {\n      const res = await fetch(`/leads/leadstatus/${params.id}`, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      });\n      const data = await res.json();\n      console.log(\"data\", data);\n      setAgentData(data);\n      setDidWeGetInfo('true');\n\n      if (!res.status === 200) {\n        const error = new Error(res.error);\n        setDidWeGetInfo('false');\n        return error;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    callLeads();\n  }, []);\n\n  const conditionalRendering = () => {\n    if (didWeGetInfo === 'loading') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        direction: \"column\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          my: \"4\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this);\n    } else if (didWeGetInfo === 'true') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PostLeadStatusDetails, {\n          agent: agentData\n        }, agentData.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Oops! No such page exists!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: conditionalRendering()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LeadStatusDetails, \"KejomDUo3tMmqMR1I+kucjd2M9Q=\", false, function () {\n  return [useParams];\n});\n\n_c = LeadStatusDetails;\nexport default LeadStatusDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeadStatusDetails\");","map":{"version":3,"sources":["C:/Users/Admin/LeadManagement/frontend/src/components/dashboard/LeadStatusDetails.js"],"names":["React","useState","useEffect","useParams","DatePickerComponent","TimePickerComponent","PostLeadStatusDetails","LeadStatusDetails","agentData","setAgentData","didWeGetInfo","setDidWeGetInfo","params","handleInputs","e","console","log","callLeads","res","fetch","id","method","headers","Accept","credentials","data","json","status","error","Error","err","conditionalRendering"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,iCAAzD;AACA,OAAO,kBAAP;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;;AAEA,SAASC,iBAAT,GAA6B;AAAA;;AAE1B;AAEC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,SAAD,CAAhD;AAEA,QAAMW,MAAM,GAAGT,SAAS,EAAxB;;AAEC,QAAMU,YAAY,GAAIC,CAAD,IAAO;AAEzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAEH,GAJA;;AAOG,QAAMG,SAAS,GAAG,YAAW;AAC7B,QAAG;AACC,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,qBAAoBP,MAAM,CAACQ,EAAG,EAAhC,EAAmC;AACtDC,QAAAA,MAAM,EAAE,KAD8C;AAEtDC,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,kBADH;AAEL,0BAAiB;AAFZ,SAF6C;AAMtDC,QAAAA,WAAW,EAAE;AANyC,OAAnC,CAAvB;AASA,YAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBS,IAApB;AACAhB,MAAAA,YAAY,CAACgB,IAAD,CAAZ;AACAd,MAAAA,eAAe,CAAC,MAAD,CAAf;;AAEA,UAAI,CAACO,GAAG,CAACS,MAAL,KAAgB,GAApB,EAAyB;AACrB,cAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUX,GAAG,CAACU,KAAd,CAAd;AACAjB,QAAAA,eAAe,CAAC,OAAD,CAAf;AACA,eAAOiB,KAAP;AACH;AAEJ,KArBD,CAqBE,OAAME,GAAN,EAAW;AACTf,MAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACH;AACJ,GAzBG;;AA2BJ5B,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAKI,QAAMc,oBAAoB,GAAG,MAAM;AACnC,QAAIrB,YAAY,KAAK,SAArB,EAAgC;AAC5B,0BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,UAAU,EAAC,QAAnC;AAAA,+BACI;AAAI,UAAA,EAAE,EAAC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAND,MAMO,IAAIA,YAAY,KAAK,MAArB,EAA6B;AAChC,0BACI;AAAA,+BAEI,QAAC,qBAAD;AAAuB,UAAA,KAAK,EAAGF;AAA/B,WAA+CA,SAAS,CAACY,EAAzD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARM,MAQA;AACH,0BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AACJ,GAtBG;;AA4BN,sBAEE;AAAA,cAEAW,oBAAoB;AAFpB;AAAA;AAAA;AAAA;AAAA,UAFF;AAQD;;GApFQxB,iB;UAOUJ,S;;;KAPVI,iB;AAsFT,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { DatePickerComponent, TimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\r\nimport './LeadStatus.css';\r\nimport PostLeadStatusDetails from './PostLeadStatusDetails';\r\n\r\nfunction LeadStatusDetails() {\r\n\r\n   // const [user, setUser] = useState();\r\n\r\n    const [agentData, setAgentData] = useState();\r\n    const [didWeGetInfo, setDidWeGetInfo] = useState('loading');\r\n\r\n    const params = useParams();\r\n\r\n     const handleInputs = (e) => {\r\n\r\n        console.log(e);\r\n       \r\n    }\r\n\r\n\r\n        const callLeads = async() => {\r\n        try{\r\n            const res = await fetch(`/leads/leadstatus/${params.id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                credentials: \"include\"\r\n            });\r\n\r\n            const data = await res.json();\r\n            console.log(\"data\", data);\r\n            setAgentData(data);\r\n            setDidWeGetInfo('true');\r\n           \r\n            if (!res.status === 200 ){\r\n                const error = new Error(res.error);\r\n                setDidWeGetInfo('false');\r\n                return error;\r\n            }\r\n\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        callLeads();\r\n    }, []);\r\n\r\n\r\n        const conditionalRendering = () => {\r\n        if (didWeGetInfo === 'loading') {\r\n            return (\r\n                <div direction=\"column\" alignItems=\"center\">\r\n                    <h5 my=\"4\">Loading...</h5>\r\n                </div>\r\n            );\r\n        } else if (didWeGetInfo === 'true') {\r\n            return (\r\n                <div>\r\n                    \r\n                    <PostLeadStatusDetails agent={ agentData} key={agentData.id} />\r\n\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div textAlign=\"center\">\r\n                    <p>Oops! No such page exists!</p>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n  \r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n   {conditionalRendering()}\r\n\r\n </div>\r\n  )\r\n}\r\n\r\nexport default LeadStatusDetails"]},"metadata":{},"sourceType":"module"}