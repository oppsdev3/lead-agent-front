[{"C:\\Users\\Admin\\LeadManagement\\frontend\\src\\index.js":"1","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\App.js":"3","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\About.js":"4","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\Home.js":"5","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\ErrorPage.js":"6","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\Login.js":"7","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\Navbar.js":"8","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\signup\\Signup.js":"9","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\Lead.js":"10","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\Profile.js":"11","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\DashboardMainScreen.js":"12","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\LeadStatus.js":"13","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\Dashboard.js":"14","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\Report.js":"15","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\MenuItem.js":"16","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\LeadStatusDetails.js":"17","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\PostLeadStatusDetails.js":"18"},{"size":602,"mtime":1644657153227,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1644486381186,"results":"21","hashOfConfig":"20"},{"size":2187,"mtime":1645175361374,"results":"22","hashOfConfig":"20"},{"size":790,"mtime":1644674926567,"results":"23","hashOfConfig":"20"},{"size":3735,"mtime":1645172148798,"results":"24","hashOfConfig":"20"},{"size":319,"mtime":1644817053609,"results":"25","hashOfConfig":"20"},{"size":5459,"mtime":1645082892041,"results":"26","hashOfConfig":"20"},{"size":1943,"mtime":1644852642058,"results":"27","hashOfConfig":"20"},{"size":9824,"mtime":1644827606361,"results":"28","hashOfConfig":"20"},{"size":3683,"mtime":1644991222508,"results":"29","hashOfConfig":"20"},{"size":174,"mtime":1644844943354,"results":"30","hashOfConfig":"20"},{"size":1073,"mtime":1644848776170,"results":"31","hashOfConfig":"20"},{"size":8613,"mtime":1645014755572,"results":"32","hashOfConfig":"20"},{"size":3250,"mtime":1645168419652,"results":"33","hashOfConfig":"20"},{"size":7089,"mtime":1645175864188,"results":"34","hashOfConfig":"20"},{"size":1227,"mtime":1644849805561,"results":"35","hashOfConfig":"20"},{"size":2279,"mtime":1645017525015,"results":"36","hashOfConfig":"20"},{"size":9565,"mtime":1645016162650,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ykwuea",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"48"},"C:\\Users\\Admin\\LeadManagement\\frontend\\src\\index.js",[],[],"C:\\Users\\Admin\\LeadManagement\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Admin\\LeadManagement\\frontend\\src\\App.js",["102","103","104","105"],[],"import Navbar from './components/Navbar';\nimport './App.css';\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/signup/Signup\";\nimport ErrorPage from \"./components/ErrorPage\";\nimport {\n    BrowserRouter as Router , Routes, Route, Link\n} from \"react-router-dom\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport DashboardMainScreen from \"./components/dashboard/DashboardMainScreen\";\nimport Lead from \"./components/dashboard/Lead\";\nimport LeadStatus from \"./components/dashboard/LeadStatus\";\nimport Report from \"./components/dashboard/Report\";\nimport Profile from \"./components/dashboard/Profile\";\nimport LeadStatusDetails from './components/dashboard/LeadStatusDetails';\nimport PostLeadStatusDetails from './components/dashboard/PostLeadStatusDetails';\nimport React, {useState} from \"react\";\n\n\nfunction App() {\n    const [inactive, setInactive] = useState(false);\n  return (\n\n    <div className=\"App\">\n        <Navbar />\n        <br/>\n        <Dashboard onCollapse={(inactive) => {\n                console.log(inactive);\n                setInactive(inactive);\n            } }/>\n        <Routes>\n            <Route path={'/home'} element={<Home /> }/>\n            <Route path={'/about'} element={<About /> }/>\n            <Route path={'/login'} element={<Login /> }/>\n            <Route path={'/signup'} element={<Signup /> }/>\n            <Route path={'/dashboard'} element={<Dashboard /> }/>\n            <Route element={<ErrorPage /> } />\n\n            <Route path={'/leads'} element={<Lead /> }/>\n            {/* <Route path={'/leadsMenu'} element={<Home /> }/> */}\n            <Route path={'/leadstatus'} element={<LeadStatus /> }/>\n            <Route path={'/leads/leadstatus/:id'} element={<LeadStatusDetails /> }/>\n            <Route path={'/leads/postleadstatus/:id'} element={<PostLeadStatusDetails /> }/>\n            <Route path={'/reports'} element={<Report /> }/>\n            <Route path={'/reports/:sdate/:edate'} element={<Report /> }/>\n            <Route path={'/profiles'} element={<Profile /> }/>\n        </Routes>\n\n    </div>\n\n  );\n}\n\nexport default App;\n",["106","107"],"C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\About.js",["108"],[],"C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\Home.js",["109"],[],"import React,{useState, useEffect} from 'react';\r\n//import './Home.css';\r\n\r\n\r\nconst Home =() => {\r\n\r\n       const [agentData, setAgentData] = useState();\r\n\r\n\r\n     const callLeads = async() => {\r\n        try{\r\n            const res = await fetch('/leads', {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                credentials: \"include\"\r\n            });\r\n\r\n            const data = await res.json();\r\n            console.log(\"data\", data);\r\n            setAgentData(data);\r\n            // console.log(\"Agent data\",agentData);\r\n\r\n            // if(!res.status(200)){\r\n            //    return new Error(res.error);\r\n            // }\r\n            if (!res.status === 200 ){\r\n                const error = new Error(res.error);\r\n                return error;\r\n            }\r\n\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        callLeads();\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n           {/* <p className={'pt-5'}>WELCOME</p>\r\n            <h3>This is the agent panel.</h3> */}\r\n            {/* <h6>Hello, testing commit</h6> */}\r\n\r\n            {/* <div className='lead-manager-container'>\r\n                    \r\n               \r\n            <div className='row'>\r\n                <div className='col'>\r\n                    <div className='lmc-card1'>\r\n                        <i class=\"zmdi zmdi-account\" > </i> \r\n                        <div style={{marginTop: \"4%\"}}> </div>\r\n                        <p>Total Leads</p>\r\n                        <p>150</p>\r\n                    </div>\r\n                </div>\r\n                <div className='col'>\r\n                    <div className='lmc-card2' style={{ boxShadow: \"20px 20px 50px 15px grey\", width: \"25%\", marginLeft:\"50%\", marginTop:\"30%\", padding:\"1%\"}}>\r\n                        <i class=\"zmdi zmdi-phone-in-talk\"> </i>\r\n                        <div style={{marginTop: \"4%\"}}> </div>\r\n                        <p>For Call</p>\r\n                        <p>34</p>\r\n                    </div>\r\n                </div>\r\n                <div className='col'>\r\n                    <div className='lmc-card1' style={{ boxShadow: \"20px 20px 50px 15px grey\", width: \"25%\", marginLeft:\"10%\", color:\"green\", marginTop:\"30%\", padding:\"1%\"}}>\r\n                        <i class=\"zmdi zmdi-check-circle-u\"> </i>\r\n                        <div style={{marginTop: \"4%\"}}> </div>\r\n                        <p>Completed</p>\r\n                        <p>54</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='col'>\r\n                    <div className='lmc-card1' style={{ boxShadow: \"20px 20px 50px 15px grey\", width: \"17%\", marginLeft:\"60%\", color:\"red\", marginTop:\"20%\", padding:\"1%\"}}>\r\n                        <i class=\"zmdi zmdi-close-circle\"> </i>\r\n                        <div style={{marginTop: \"4%\"}}> </div>\r\n                        <p>Canceled</p>\r\n                        <p>30</p>\r\n                    </div>\r\n                </div>\r\n                <div className='col'>\r\n                    <div className='lmc-card1' style={{ boxShadow: \"20px 20px 50px 15px grey\", width: \"17%\", marginLeft:\"10%\", color:\"#EEBC1D\", marginTop:\"20%\", padding:\"1%\"}}>\r\n                        <i class=\"zmdi zmdi-time\"></i>\r\n                        <div style={{marginTop: \"4%\"}}> </div>\r\n                        <p>Pending</p>\r\n                        <p>40</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\ErrorPage.js",["110"],[],"C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\Login.js",["111","112"],[],"import React, { useState } from 'react';\r\nimport './signup/Signup.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Login =() => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const LogUserIn = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const res = await fetch(\"/signin\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email, password\r\n            })\r\n        });\r\n\r\n        const data = await res.json();\r\n        if(data.status === 400 || !data ){\r\n            window.alert(\"Login failed\");\r\n        } else {\r\n            window.alert(\"Login successful\");\r\n            console.log(\"Agent data: \", data);\r\n            navigate('/home');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <section className={'signup'}>\r\n                <div className={'container '}  style={{ marginBottom: '5%'}}>\r\n                    <div className={'signup-content'}>\r\n                        <div className=\"row\" >\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"card\" style={{ height: '87%', width: '210%' , marginTop: '15%' , marginBottom: '10%', boxShadow: ' 5px 3px 5px 3px  #9E9E9E'}}>\r\n                                    <div className=\"card-body\" style={{ marginTop: '1%'}} >\r\n                                        <img className=\"card-img-right\" src={require('./images/login_l.png')} alt=\"Card image cap\" style={{ width:'50%'}}/>\r\n                                        <p className=\"card-text\"  > With supporting text below as a natural lead-in to\r\n                                            additional content.</p>\r\n                                        <div className={'signup-image'}>\r\n                                            {/*<img src={require('../images/minimal_standing_desk.svg')} alt={''} />*/}\r\n                                        </div>\r\n\r\n                                        <form method={\"POST\"}>\r\n\r\n\r\n\r\n                                            <div className=\"form-group row\" style={{ marginTop: '12%', marginLeft: '5%'}} >\r\n                                                <div className={'name-icon'}> <i className=\"zmdi zmdi-email\"> </i> </div>\r\n                                                <div className=\"col-sm-20 \">\r\n                                                    <input type=\"email\" className=\"form-control\" name={'email'} value={email} onChange={(e) => setEmail(e.target.value)}\r\n                                                           placeholder=\"Email\" style={{  borderColor: \"white\", backgroundColor: \"white\" }}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <br/>\r\n\r\n                                            <div className=\"form-group row\" style={{ marginLeft: '5%' }}>\r\n                                                <div className={'name-icon'}> <i className=\"zmdi zmdi-key\"> </i> </div>\r\n                                                <div className=\"col-sm-20 \">\r\n                                                    <input type=\"password\" className=\"form-control\" name={'password'} value={password} onChange={(e) => setPassword(e.target.value)}\r\n                                                           placeholder=\"Password\" style={{ backgroundColor: \"white\", borderColor: \"white\"}}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <br/>\r\n                                            <br/>\r\n                                            <br/>\r\n\r\n\r\n                                            <div className=\"form-group row\">\r\n                                                <div className=\"col-sm-10\">\r\n                                                    <button type=\"submit\"  onClick={LogUserIn} className=\"btn btn-outline-secondary\" style={{ marginLeft:'14%', width: '15%', padding:'1%', marginTop:'5%', marginBottom:'4%' }}>Log in</button>\r\n                                                    {/*<div className={\"form-group form-button\"} style={{ marginTop: '10%'}}>*/}\r\n                                                    {/*    <input type={'submit'} name={\"Login\"} id={'login'} className={'form-submit'} value={'Login'} style={{ marginLeft:'9%', padding:'1%', width:'13%', marginTop:'-10%' }} />*/}\r\n                                                    {/*</div>*/}\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm-6\">\r\n                                <img className=\"card-img-right\" src={require('./images/login-icon.gif')} alt=\"Card image cap\"  style={{ marginTop:'90%', height:'20%', width:'30%' , marginRight:'3%' }}/>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\Navbar.js",["113"],[],"C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\signup\\Signup.js",["114","115","116","117"],[],"C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\Lead.js",["118"],[],"import React, {useEffect, useState} from 'react';\r\nimport './Lead.css';\r\nimport {  useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Lead =() => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [agentData, setAgentData] = useState();\r\n\r\n    const handleOnView = () => {\r\n        navigate('/leadstatus');\r\n    }\r\n\r\n    const callLeads = async() => {\r\n        try{\r\n            const res = await fetch('/leads', {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                credentials: \"include\"\r\n            });\r\n\r\n            const data = await res.json();\r\n            console.log(\"data\", data);\r\n            setAgentData(data);\r\n            // console.log(\"Agent data\",agentData);\r\n\r\n            // if(!res.status(200)){\r\n            //    return new Error(res.error);\r\n            // }\r\n            if (!res.status === 200 ){\r\n                const error = new Error(res.error);\r\n                return error;\r\n            }\r\n\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        callLeads();\r\n    }, []);\r\n\r\n    return(\r\n        <div >\r\n            <h2> This is leads </h2>\r\n            <p>Total Leads</p>\r\n                <div className={'top-row'}>\r\n                <div className={'row'}>\r\n                    <div className={'col'}>\r\n                        <h6>Name</h6>\r\n                    </div>\r\n                    <div className={'col'}>\r\n                        <h6>Phone Number</h6>\r\n                    </div>\r\n                    <div className={'col'}>\r\n                        <h6>Course Name</h6>\r\n                    </div>\r\n                    <div className={'col'}>\r\n                        <h6>Status</h6>\r\n                    </div>\r\n                    <div className={'col'}>\r\n                        <h6>Comments</h6>\r\n                    </div>\r\n                    <div className={'col'}>\r\n                        <h6> &nbsp; </h6>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            <div>\r\n                {\r\n                    !!agentData &&\r\n                    agentData.map((agent) =>\r\n\r\n                        <div className={'body-row'}>\r\n                            <div className={'row'}>\r\n                                <div className={'col'}>\r\n                                    <h6>{agent.firstname}</h6>\r\n                                </div>\r\n                                <div className={'col'}>\r\n                                    <h6>{agent.phonenumber}</h6>\r\n                                </div>\r\n                                <div className={'col'}>\r\n                                    <h6>{agent.interestedcourse}</h6>\r\n                                </div>\r\n                                <div className={'col'}>\r\n                                    <h6>{agent.status}</h6>\r\n                                </div>\r\n                                <div className={'col'}>\r\n                                    <h6>{agent.notes}</h6>\r\n                                </div>\r\n                                <div className={'col'}>\r\n                                    <button onClick={() => {\r\n                                        navigate(`leadstatus/${agent._id}`)\r\n                                    }}> view </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lead;","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\Profile.js",[],[],"C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\DashboardMainScreen.js",["119","120"],[],"C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\LeadStatus.js",["121","122","123"],[],"import React, {useState} from 'react';\r\n//import {NavLink} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './LeadStatus.css';\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { DatePickerComponent, TimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\r\nimport {DateRangePickerComponent} from \"@syncfusion/ej2-react-calendars/src/daterangepicker/daterangepicker.component\";\r\nimport {DateTimePickerComponent} from \"@syncfusion/ej2-react-calendars/src/datetimepicker/datetimepicker.component\";\r\n\r\nconst LeadStatus =() => {\r\n\r\n   // const [value, setValue] = useState(new Date());\r\n\r\n    const [agent , setAgent ] = useState({\r\n        firstname: \" \", lastname: \" \", email: \" \",\r\n        phonenumber: \" \", interestedcourse: \" \", collegename: \" \",\r\n        status: \" \", date:\" \", time: \" \", notes: \" \"\r\n    });\r\n\r\n\r\n    let name, value;\r\n\r\n    const handleInputs = (e) => {\r\n\r\n        name = e.target.name;\r\n        value = e.target.value;\r\n        console.log(name, value);\r\n\r\n        setAgent({ ...agent, [name]: value} );\r\n    }\r\n\r\n    const PostData = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { firstname, lastname, email, phonenumber, interestedcourse, collegename, status, date, time, notes } = agent;\r\n\r\n        console.log(agent);\r\n\r\n        const res = await fetch(\"/leadstatus\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                firstname, lastname, email, phonenumber, interestedcourse, collegename, status, date, time, notes\r\n            })\r\n        });\r\n\r\n        const data = await res.json();\r\n        if(data.status === 422 || !data ){\r\n            window.alert(\"Update failed\");\r\n        } else {\r\n            window.alert(\"Update successful\");\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className={'container'}>\r\n            <div className={'ls-top-section'}>\r\n                <div className={\"row\"}>\r\n                    <div className={'topbar'}>\r\n                        <div className={\"col\"}>\r\n                            <i className=\"zmdi zmdi-account-circle\" style={{color: \"bisque\", fontSize: \"1.8rem\", marginRight: '40%'}}>  </i>\r\n                            <p style={{  fontSize: \"1rem\", marginLeft: \"20%\" , width: \"10vw\", marginTop: \"-2.9vh\" }}> &nbsp;&nbsp; &nbsp; Lead Status&nbsp; -  </p>\r\n                        </div>\r\n                    <div className={\"col\"}>\r\n                        <p style={{ display:\"flex\", color: \"darkblue\" , width: \"10vw\",  fontSize: \"0.8rem\", marginLeft: \"8%\", marginTop: \"0.5vh\" }}> Need to call </p>  {/*add status dynamically {status} from backend*/}\r\n                    </div>\r\n\r\n                    <div className={\"col\"}>\r\n                        <button className={'btn-secondary'} style={{ backgroundColor: \"green\", borderRadius: \"12%\", padding: \"5%\", width:\"180%\", marginLeft: \"850%\"}} onClick={PostData}> Post </button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n\r\n            <form method={\"POST\"}>\r\n\r\n\r\n                <div className={'body-container'}>\r\n\r\n\r\n\r\n                <div className={\"row\"}>\r\n                    <div className={\"col\"}>\r\n                        <div className={\"form-group\"}>\r\n                            <label style={{ marginRight: \"70%\" }} htmlFor=\"exampleFormControlInput1\">First Name</label>\r\n                            <input type=\"name\" name={\"firstname\"} className=\"form-control\" id=\"exampleFormControlInput1\"\r\n                                   placeholder=\"first name\" value={agent.firstname} onChange={handleInputs} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"col\"}>\r\n                        <div className={\"form-group\"}>\r\n                            <label style={{ marginRight: \"70%\" }} htmlFor=\"exampleFormControlInput1\">Last Name</label>\r\n                            <input type=\"name\" name={\"lastname\"} className=\"form-control\" id=\"exampleFormControlInput2\"\r\n                                   placeholder=\"last name\" value={agent.lastname} onChange={handleInputs} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={\"row\"}>\r\n                    <div className={\"col\"}>\r\n                        <div className={\"form-group\"}>\r\n                            <label style={{ marginRight: \"70%\" }} htmlFor=\"exampleFormControlInput1\">Email</label>\r\n                            <input type=\"email\" name={\"email\"} className=\"form-control\" id=\"exampleFormControlInput3\"\r\n                                   placeholder=\"username@email.com\" value={agent.email} onChange={handleInputs}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"col\"}>\r\n                        <div className={\"form-group\"}>\r\n                            <label style={{ marginRight: \"70%\" }} htmlFor=\"exampleFormControlInput1\">Phone Number</label>\r\n                            <input type=\"number\" name={\"phonenumber\"} className=\"form-control\" id=\"exampleFormControlInput4\"\r\n                                   placeholder=\"phone number\" value={agent.phonenumber} onChange={handleInputs}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={\"row\"}>\r\n                    <div className={\"col\"}>\r\n                        <div className={\"form-group\"}>\r\n                            <label style={{ marginRight: \"70%\", marginTop: \"2vh\" }} htmlFor=\"exampleFormControlInput1\">Interested Course</label>\r\n                            <input type=\"name\" name={\"interestedcourse\"} className=\"form-control\" id=\"exampleFormControlInput5\"\r\n                                   placeholder=\"course name\" value={agent.interestedcourse} onChange={handleInputs}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"col\"}>\r\n                        <div className={\"form-group\"}>\r\n                            <label style={{ marginRight: \"70%\", marginTop: \"2vh\"}} htmlFor=\"exampleFormControlInput1\"> Enter College Name </label>\r\n                            <input type=\"name\" name={\"collegename\"} className=\"form-control\" id=\"exampleFormControlInput6\"\r\n                                   placeholder=\"college name\" value={agent.collegename} onChange={handleInputs}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label style={{ marginRight: \"90%\" }} htmlFor=\"exampleFormControlSelect1\">Status</label>\r\n                    <select className=\"form-control\" name={\"status\"} id=\"exampleFormControlSelect1\" value={agent.status} onChange={handleInputs} >\r\n                        <option>Need to call</option>\r\n                        <option>Pending</option>\r\n                        <option>Completed</option>\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                <div className={\"row\"}>\r\n                    <div className={\"col\"}>\r\n                        <div className={\"form-group\"}>\r\n                            <label style={{ marginRight: \"80%\" }} htmlFor=\"exampleFormControlInput1\">Date</label>\r\n                            <div>\r\n                                <DatePickerComponent value={agent.date} name={\"date\"} onChange={handleInputs}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"col\"}>\r\n                        <div className={\"form-group\"}>\r\n                            <label style={{ marginRight: \"80%\" }} htmlFor=\"exampleFormControlInput1\">Time</label>\r\n                            <div>\r\n                                <TimePickerComponent value={agent.time} name={\"time\"} onChange={handleInputs}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"form-group\">\r\n                    <label style={{ marginRight: \"90%\", marginTop: \"3.5vh\" }} htmlFor=\"exampleFormControlTextarea1\">Add Notes</label>\r\n                    <textarea name={\"notes\"} className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" value={agent.notes} onChange={handleInputs}> </textarea>\r\n                </div>\r\n\r\n                </div>\r\n                <br/>\r\n                <br />\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeadStatus;","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\Dashboard.js",["124","125","126","127"],[],"import React, {useEffect, useState} from 'react';\r\nimport './Dashboard.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport MenuItem from \"./MenuItem\";\r\n\r\n\r\nconst menuItems = [\r\n    {name: 'Leads', exact:true, to: '/leads', iconClassName:\"zmdi zmdi-view-dashboard\", subMenus: [{ name: \"Total Leads\", exact:true, to: '/leads' }, { name: \"Lead Status\", to: '/leadstatus' }]},\r\n    {name: 'Reports', to: '/reports', iconClassName:\"zmdi zmdi-view-toc\"},\r\n    {name: 'Profiles', to: '/profiles', iconClassName:\"zmdi zmdi-account-circle\"},\r\n]\r\n\r\nconst Dashboard =(props) => {\r\n\r\n\r\n    const [inactive, setInactive] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        if(inactive){\r\n            document.querySelectorAll('submenu').forEach(el => {\r\n                el.classList.remove('active');\r\n            })\r\n        }\r\n\r\n        props.onCollapse(inactive);\r\n\r\n    }, [inactive])\r\n\r\n\r\n    return(\r\n        <div className={`side-menu ${inactive ?  'inactive' : '' }`}>\r\n            <div className={\"top-section\"} >\r\n                <div className={'logo'}>\r\n                    <img src={require('../images/MicrosoftTeams-image (1).png')} />\r\n                </div>\r\n                <div className={'toggle-menu'}>\r\n                    <button onClick={() => setInactive(!inactive)} className={'btn'}>\r\n                        {\r\n                            inactive ? <i className=\"zmdi zmdi-caret-left-circle\"> </i> : <i className=\"zmdi zmdi-caret-right-circle\"> </i>\r\n                        }\r\n\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={'divider'}> </div>\r\n\r\n            <div className={'dashboard-text'}>\r\n                <div className={'dashboard-icon'}>\r\n                    <i className=\"zmdi zmdi-collection-bookmark\" style={{color: \"bisque\", marginTop:\"40%\", fontSize: \"1.5rem\" }}> &nbsp;  <span> DASHBOARD </span>  </i>\r\n                </div>\r\n               <div className={'main-menu'}>\r\n                    <ul>\r\n\r\n\r\n                        {\r\n                            menuItems.map((menuItem, index) =>\r\n                                <MenuItem\r\n                                    key={index} name={menuItem.name} exact={menuItem.exact} iconClassName={menuItem.iconClassName} to={menuItem.to} subMenus={menuItem.subMenus || [ ]}\r\n                                    onClick={() => {\r\n                                        if(inactive){\r\n                                            setInactive(false);\r\n                                        }\r\n                                    }\r\n                                    }\r\n                                />)\r\n                        }\r\n\r\n\r\n\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className={'side-menu-footer'}>\r\n                <div className={'footer-avatar'}>\r\n                    <img src={require('../images/one-round-modified.png')} />\r\n                </div>\r\n                <div className={'user-info'}>\r\n                    <h5>Testuser One</h5>\r\n                    <p>testuserone@gmail.com</p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\Report.js",["128"],[],"import React, {useEffect, useState} from 'react';\r\nimport './Lead.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { CSVLink } from 'react-csv';\r\n//import { DatePicker } from 'react-datepicker';\r\n//import 'react-datepicker/dist/react-datepicker.css';\r\nimport { DateRangePickerComponent } from \"@syncfusion/ej2-react-calendars\";\r\nimport { DateRangePicker } from 'rsuite';\r\n\r\n\r\nconst Report =() => {\r\n\r\n    const [agentData, setAgentData] = useState();\r\n \r\n    const today = new Date().toISOString().slice(0, 10)\r\n\r\n\r\n    const [selectedDate, setSelectedDate] = useState(today);\r\n\r\n\r\n    const callReports = async() => {\r\n        try{\r\n            const res = await fetch('/reports', {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                credentials: \"include\"\r\n            });\r\n\r\n            const data = await res.json();\r\n            setAgentData(data);\r\n            console.log(\"data\", data);\r\n\r\n\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n// http://localhost:4000/reports/{\"para1\":[2022-02-18],\"para2\":[2022-03-09]}\r\n\r\n    const callReportsbyDate = async() => {\r\n        try{\r\n            // const res = await fetch(`/reports/{\"para1\":[${selectedDate[0]}], \"para2\":[${selectedDate[1]}]}`, {\r\n                 const res = await fetch(`/reports/${selectedDate[0]}/${selectedDate[1]}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                credentials: \"include\"\r\n            });\r\n\r\n            const data = await res.json();\r\n            setAgentData(data);\r\n            console.log(\"sending this date to backend:\", selectedDate)\r\n            console.log(\"date data\", data);\r\n\r\n\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        callReports();\r\n    }, []);\r\n\r\n\r\n\r\n    const data1 = [agentData];\r\n    const  data = JSON.stringify(data1);\r\n    const headers = [\r\n        {label: 'Name', key:'firstname' },\r\n        {label: 'Phone Number', key:'phonenumber' },\r\n        {label: 'Course name', key:'interestedcourse' },\r\n        {label: 'Status', key:'status' },\r\n        {label: 'Comments', key:'notes' }\r\n    ]\r\n\r\n    const csvReport = {\r\n        filename: 'Report.csv',\r\n        headers: headers,\r\n        data: data\r\n    };\r\n\r\n    const handleOnSet = (e) => {\r\n        setSelectedDate(e.target.value);\r\n        console.log(\"Selected Date: \",selectedDate)\r\n          console.log(\"Selected Start Date: \",selectedDate[0])\r\n            console.log(\"Selected End Date: \",selectedDate[1])\r\n        callReportsbyDate();\r\n    }\r\n\r\n    const date = new Date(new Date().getFullYear, new Date().getMonth(), 14);\r\n    const startValue = date;\r\n\r\n    const endDate = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 15);\r\n    const endValue = endDate;\r\n\r\n    return(\r\n         <div id='content'>\r\n\r\n            <div className={'rls-top-section'}>\r\n                <div className={\"row\"}>\r\n                    <div className={'topbar'}>\r\n                        <div className={\"col\"}>\r\n                            <i className=\"zmdi zmdi-account-circle\" style={{color: \"bisque\", fontSize: \"1.8rem\", marginRight: '40%'}}>  </i>\r\n                            <p style={{  fontSize: \"1rem\", marginLeft: \"20%\" , width: \"10vw\", marginTop: \"-2.9vh\" }}> &nbsp;&nbsp; &nbsp; Total Leads &nbsp; -  </p>\r\n                        </div>\r\n                    <div className={\"col\"}>\r\n                        <p style={{ display:\"flex\", color: \"darkblue\" , width: \"10vw\",  fontSize: \"0.8rem\", marginLeft: \"8%\", marginTop: \"0.4vh\" }}> (150) </p>  {/*add no of leads dynamically {status} from backend*/}\r\n                    </div>\r\n\r\n\r\n                     <div className={\"col\"} >\r\n                       <div style={{ marginRight:\"40%\" ,marginLeft: \"40%\",  width:\"780%\"}}>\r\n\r\n                            <DateRangePickerComponent placeholder='Select Range' startDate={startValue} endDate={endValue}  value={selectedDate} name={\"date\"} onChange={handleOnSet} />\r\n                    \r\n                       </div>\r\n                         \r\n                    </div>\r\n\r\n                    <div className={\"col\"}>\r\n                        <button className={'btn-secondary'} style={{ backgroundColor: \"green\", borderRadius: \"10%\", padding: \"6%\", width:\"280%\", marginLeft: \"720%\", marginTop: \"-0.2vh\"}}\r\n                         > \r\n                          <CSVLink {...csvReport} style={{color:\"whitesmoke\"}}> \r\n                              Export &nbsp; <i class=\"zmdi zmdi-share\"> </i>\r\n                          </CSVLink>\r\n                         </button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n\r\n\r\n          <div className={\"rls-body\"}> \r\n            <div className={'top-row'}>\r\n                <div className={'row'}>\r\n                    <div className={'col'}>\r\n                        <h6>Name</h6>\r\n                    </div>\r\n                    <div className={'col'}>\r\n                        <h6>Phone Number</h6>\r\n                    </div>\r\n                    <div className={'col'}>\r\n                        <h6>Course Name</h6>\r\n                    </div>\r\n                    <div className={'col'}>\r\n                        <h6>Status</h6>\r\n                    </div>\r\n                    <div className={'col'}>\r\n                        <h6>Comments</h6>\r\n                    </div>\r\n                    <div className={'col'}>\r\n                        <h6> &nbsp; </h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                {\r\n                    !!agentData &&\r\n                    agentData.map((agent) =>\r\n\r\n                        <div className={'body-row'}>\r\n                            <div className={'row'}>\r\n                                <div className={'col'}>\r\n                                    <h6>{agent.firstname}</h6>\r\n                                </div>\r\n                                <div className={'col'}>\r\n                                    <h6>{agent.phonenumber}</h6>\r\n                                </div>\r\n                                <div className={'col'}>\r\n                                    <h6>{agent.interestedcourse}</h6>\r\n                                </div>\r\n                                <div className={'col'}>\r\n                                    <h6>{agent.status}</h6>\r\n                                </div>\r\n                                <div className={'col'}>\r\n                                    <h6>{agent.notes}</h6>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n            </div>\r\n            </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Report;","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\MenuItem.js",["129","130"],[],"C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\LeadStatusDetails.js",["131","132","133","134"],[],"import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { DatePickerComponent, TimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\r\nimport './LeadStatus.css';\r\nimport PostLeadStatusDetails from './PostLeadStatusDetails';\r\n\r\nfunction LeadStatusDetails() {\r\n\r\n   // const [user, setUser] = useState();\r\n\r\n    const [agentData, setAgentData] = useState();\r\n    const [didWeGetInfo, setDidWeGetInfo] = useState('loading');\r\n\r\n    const params = useParams();\r\n\r\n     const handleInputs = (e) => {\r\n\r\n        console.log(e);\r\n       \r\n    }\r\n\r\n\r\n        const callLeads = async() => {\r\n        try{\r\n            const res = await fetch(`/leads/leadstatus/${params.id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                credentials: \"include\"\r\n            });\r\n\r\n            const data = await res.json();\r\n            console.log(\"data\", data);\r\n            setAgentData(data);\r\n            setDidWeGetInfo('true');\r\n           \r\n            if (!res.status === 200 ){\r\n                const error = new Error(res.error);\r\n                setDidWeGetInfo('false');\r\n                return error;\r\n            }\r\n\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        callLeads();\r\n    }, []);\r\n\r\n\r\n        const conditionalRendering = () => {\r\n        if (didWeGetInfo === 'loading') {\r\n            return (\r\n                <div direction=\"column\" alignItems=\"center\">\r\n                    <h5 my=\"4\">Loading...</h5>\r\n                </div>\r\n            );\r\n        } else if (didWeGetInfo === 'true') {\r\n            return (\r\n                <div>\r\n                    \r\n                    <PostLeadStatusDetails agent={ agentData} key={agentData.id} />\r\n\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div textAlign=\"center\">\r\n                    <p>Oops! No such page exists!</p>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n  \r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n   {conditionalRendering()}\r\n\r\n </div>\r\n  )\r\n}\r\n\r\nexport default LeadStatusDetails","C:\\Users\\Admin\\LeadManagement\\frontend\\src\\components\\dashboard\\PostLeadStatusDetails.js",["135"],[],"import React, { useState } from 'react'\r\n\r\n\r\nimport { DatePickerComponent, TimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\r\n\r\nfunction PostLeadStatusDetails({ agent }) {\r\n\r\n\r\n        const [user , setUser ] = useState({\r\n\r\n            firstname: agent.firstname,\r\n            lastname: agent.lastname, \r\n            email: agent.email,\r\n            phonenumber: agent.phonenumber, \r\n            interestedcourse: agent.interestedcourse, \r\n            collegename: agent.collegename,\r\n            status: agent.status, \r\n            date: agent.date, \r\n            time: agent.time, \r\n            notes: agent.notes\r\n    })\r\n\r\n\r\n    let name, value;\r\n\r\n    const handleInputs = (e) => {\r\n\r\n        name = e.target.name;\r\n        value = e.target.value;\r\n        console.log(name, value);\r\n\r\n        setUser({...user, [name]: value});\r\n    }\r\n\r\n\r\n    const PostData = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const {  firstname, lastname, email, phonenumber, interestedcourse, collegename, status, date, time, notes } = user;\r\n\r\n        const res = await fetch(`/leads/postleadstatus/${agent._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                 firstname, lastname, email, phonenumber, interestedcourse, collegename, status, date, time, notes \r\n            })\r\n        });\r\n\r\n        const data = await res.json();\r\n        if(data.status === 422 || !data ){\r\n            window.alert(\"Update failed\");\r\n        } else {\r\n            window.alert(\"Updated successfully\");\r\n        \r\n        }\r\n    }\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n{\r\n    console.log(\"agent in new component:\",agent)\r\n    \r\n}\r\n\r\n\r\n{\r\n    console.log(\"id: \", agent._id)\r\n}\r\n\r\n    <div className='pls-head'>\r\n        <h5>\r\n            Update lead status here.\r\n        </h5>\r\n    </div>\r\n\r\n    <form method='PUT' >\r\n\r\n         <div className={'pls-top-section'}>\r\n                <div className={\"row\"}>\r\n                    <div className={'topbar'}>\r\n                        <div className={\"col\"}>\r\n                            <i className=\"zmdi zmdi-account-circle\" style={{color: \"bisque\", fontSize: \"1.8rem\", marginRight: '40%'}}>  </i>\r\n                            <p style={{  fontSize: \"1rem\", marginLeft: \"20%\" , width: \"10vw\", marginTop: \"-2.9vh\" }}> &nbsp;&nbsp; &nbsp; Lead Status&nbsp; -  </p>\r\n                        </div>\r\n                    <div className={\"col\"}>\r\n                        <p style={{ display:\"flex\", color: \"darkblue\" , width: \"10vw\",  fontSize: \"0.8rem\", marginLeft: \"8%\", marginTop: \"0.5vh\" }}> {user.status} </p>  {/*add status dynamically {status} from backend*/}\r\n                    </div>\r\n\r\n                    <div className={\"col\"}>\r\n                        <button className={'btn-secondary'} style={{ borderRadius: \"50%\", padding: \"0.3%\", marginLeft: \"850%\", width: \"140%\", padding: \"8%\"}} onClick={PostData}> Update </button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n\r\n\r\n                            <div className={'pls-status-body-container'}>\r\n\r\n                            <div className={\"row\"}>\r\n                                <div className={\"col\"}>\r\n                                    <div className={\"form-group\"}>\r\n                                        <label style={{ marginRight: \"70%\" }} htmlFor=\"exampleFormControlInput1\">First Name</label>\r\n                                        <input type=\"name\" name={\"firstname\"} className=\"form-control\" id=\"exampleFormControlInput1\"\r\n                                            placeholder=\"first name\" value={user.firstname} onChange={handleInputs} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className={\"col\"}>\r\n                                    <div className={\"form-group\"}>\r\n                                        <label style={{ marginRight: \"70%\" }} htmlFor=\"exampleFormControlInput1\">Last Name</label>\r\n                                        <input type=\"name\" name={\"lastname\"} className=\"form-control\" id=\"exampleFormControlInput2\"\r\n                                            placeholder=\"last name\" value={user.lastname} onChange={handleInputs} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={\"row\"}>\r\n                                <div className={\"col\"}>\r\n                                    <div className={\"form-group\"}>\r\n                                        <label style={{ marginRight: \"70%\" }} htmlFor=\"exampleFormControlInput1\">Email</label>\r\n                                        <input type=\"email\" name={\"email\"} className=\"form-control\" id=\"exampleFormControlInput3\"\r\n                                            placeholder=\"username@email.com\" value={user.email} onChange={handleInputs}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={\"col\"}>\r\n                                    <div className={\"form-group\"}>\r\n                                        <label style={{ marginRight: \"70%\" }} htmlFor=\"exampleFormControlInput1\">Phone Number</label>\r\n                                        <input type=\"number\" name={\"phonenumber\"} className=\"form-control\" id=\"exampleFormControlInput4\"\r\n                                            placeholder=\"phone number\" value={user.phonenumber} onChange={handleInputs}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={\"row\"}>\r\n                                <div className={\"col\"}>\r\n                                    <div className={\"form-group\"}>\r\n                                        <label style={{ marginRight: \"70%\", marginTop: \"2vh\" }} htmlFor=\"exampleFormControlInput1\">Interested Course</label>\r\n                                        <input type=\"name\" name={\"interestedcourse\"} className=\"form-control\" id=\"exampleFormControlInput5\"\r\n                                            placeholder=\"course name\" value={user.interestedcourse} onChange={handleInputs}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={\"col\"}>\r\n                                    <div className={\"form-group\"}>\r\n                                        <label style={{ marginRight: \"70%\", marginTop: \"2vh\"}} htmlFor=\"exampleFormControlInput1\"> Enter College Name </label>\r\n                                        <input type=\"name\" name={\"collegename\"} className=\"form-control\" id=\"exampleFormControlInput6\"\r\n                                            placeholder=\"college name\" value={user.collegename} onChange={handleInputs}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label style={{ marginRight: \"90%\" }} htmlFor=\"exampleFormControlSelect1\">Status</label>\r\n                                <select className=\"form-control\" name={\"status\"} id=\"exampleFormControlSelect1\" value={user.status} onChange={handleInputs} >\r\n                                    <option>Need to call</option>\r\n                                    <option>Pending</option>\r\n                                    <option>Completed</option>\r\n                                </select>\r\n                            </div>\r\n\r\n\r\n                            <div className={\"row\"}>\r\n                                <div className={\"col\"}>\r\n                                    <div className={\"form-group\"}>\r\n                                        <label style={{ marginRight: \"80%\" }} htmlFor=\"exampleFormControlInput1\">Date</label>\r\n                                        <div>\r\n                                            <DatePickerComponent value={user.date} name={\"date\"} onChange={handleInputs}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={\"col\"}>\r\n                                    <div className={\"form-group\"}>\r\n                                        <label style={{ marginRight: \"80%\" }} htmlFor=\"exampleFormControlInput1\">Time</label>\r\n                                        <div>\r\n                                            <TimePickerComponent value={user.time} name={\"time\"} onChange={handleInputs}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"form-group\">\r\n                                <label style={{ marginRight: \"90%\", marginTop: \"3.5vh\" }} htmlFor=\"exampleFormControlTextarea1\">Add Notes</label>\r\n                                <textarea name={\"notes\"} className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" value={user.notes} onChange={handleInputs}> </textarea>\r\n                            </div>\r\n\r\n                            </div>\r\n                            <br/>\r\n                            <br />\r\n\r\n                         </form>\r\n </div>\r\n\r\n  )\r\n}\r\n\r\nexport default PostLeadStatusDetails",{"ruleId":"136","severity":1,"message":"137","line":9,"column":22,"nodeType":"138","messageId":"139","endLine":9,"endColumn":28},{"ruleId":"136","severity":1,"message":"140","line":9,"column":46,"nodeType":"138","messageId":"139","endLine":9,"endColumn":50},{"ruleId":"136","severity":1,"message":"141","line":12,"column":8,"nodeType":"138","messageId":"139","endLine":12,"endColumn":27},{"ruleId":"136","severity":1,"message":"142","line":23,"column":12,"nodeType":"138","messageId":"139","endLine":23,"endColumn":20},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":13,"column":25,"nodeType":"149","endLine":13,"endColumn":194},{"ruleId":"136","severity":1,"message":"150","line":7,"column":15,"nodeType":"138","messageId":"139","endLine":7,"endColumn":24},{"ruleId":"151","severity":1,"message":"152","line":6,"column":13,"nodeType":"149","endLine":6,"endColumn":56},{"ruleId":"147","severity":1,"message":"148","line":46,"column":41,"nodeType":"149","endLine":46,"endColumn":156},{"ruleId":"147","severity":1,"message":"148","line":94,"column":33,"nodeType":"149","endLine":94,"endColumn":203},{"ruleId":"147","severity":1,"message":"148","line":11,"column":17,"nodeType":"149","endLine":11,"endColumn":162},{"ruleId":"136","severity":1,"message":"153","line":17,"column":13,"nodeType":"138","messageId":"139","endLine":17,"endColumn":20},{"ruleId":"136","severity":1,"message":"154","line":17,"column":22,"nodeType":"138","messageId":"139","endLine":17,"endColumn":32},{"ruleId":"147","severity":1,"message":"148","line":82,"column":41,"nodeType":"149","endLine":82,"endColumn":134},{"ruleId":"147","severity":1,"message":"148","line":185,"column":33,"nodeType":"149","endLine":185,"endColumn":181},{"ruleId":"136","severity":1,"message":"155","line":13,"column":11,"nodeType":"138","messageId":"139","endLine":13,"endColumn":23},{"ruleId":"136","severity":1,"message":"137","line":3,"column":22,"nodeType":"138","messageId":"139","endLine":3,"endColumn":28},{"ruleId":"136","severity":1,"message":"140","line":3,"column":46,"nodeType":"138","messageId":"139","endLine":3,"endColumn":50},{"ruleId":"136","severity":1,"message":"156","line":5,"column":10,"nodeType":"138","messageId":"139","endLine":5,"endColumn":19},{"ruleId":"136","severity":1,"message":"157","line":7,"column":9,"nodeType":"138","messageId":"139","endLine":7,"endColumn":33},{"ruleId":"136","severity":1,"message":"158","line":8,"column":9,"nodeType":"138","messageId":"139","endLine":8,"endColumn":32},{"ruleId":"136","severity":1,"message":"159","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":17},{"ruleId":"160","severity":1,"message":"161","line":29,"column":8,"nodeType":"162","endLine":29,"endColumn":18,"suggestions":"163"},{"ruleId":"151","severity":1,"message":"152","line":36,"column":21,"nodeType":"149","endLine":36,"endColumn":84},{"ruleId":"151","severity":1,"message":"152","line":81,"column":21,"nodeType":"149","endLine":81,"endColumn":78},{"ruleId":"136","severity":1,"message":"164","line":8,"column":10,"nodeType":"138","messageId":"139","endLine":8,"endColumn":25},{"ruleId":"136","severity":1,"message":"165","line":6,"column":44,"nodeType":"138","messageId":"139","endLine":6,"endColumn":51},{"ruleId":"136","severity":1,"message":"166","line":6,"column":57,"nodeType":"138","messageId":"139","endLine":6,"endColumn":62},{"ruleId":"136","severity":1,"message":"167","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":29},{"ruleId":"136","severity":1,"message":"168","line":3,"column":31,"nodeType":"138","messageId":"139","endLine":3,"endColumn":50},{"ruleId":"136","severity":1,"message":"169","line":16,"column":12,"nodeType":"138","messageId":"139","endLine":16,"endColumn":24},{"ruleId":"160","severity":1,"message":"170","line":52,"column":8,"nodeType":"162","endLine":52,"endColumn":10,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":95,"column":143,"nodeType":"174","messageId":"175","endLine":95,"endColumn":150},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'DashboardMainScreen' is defined but never used.","'inactive' is assigned a value but never used.","no-native-reassign",["176"],"no-negated-in-lhs",["177"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'agentData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'records' is assigned a value but never used.","'setRecords' is assigned a value but never used.","'handleOnView' is assigned a value but never used.","'TextField' is defined but never used.","'DateRangePickerComponent' is defined but never used.","'DateTimePickerComponent' is defined but never used.","'NavLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["178"],"'DateRangePicker' is defined but never used.","'onClick' is assigned a value but never used.","'exact' is assigned a value but never used.","'DatePickerComponent' is defined but never used.","'TimePickerComponent' is defined but never used.","'handleInputs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callLeads'. Either include it or remove the dependency array.",["179"],"no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [inactive, props]",{"range":"184","text":"185"},"Update the dependencies array to be: [callLeads]",{"range":"186","text":"187"},[918,928],"[inactive, props]",[1451,1453],"[callLeads]"]