#!/usr/bin/env node
const program = require('commander')
const { rollup } = require('../helpers')

program
  .description('Bundle code using rollup and babel-preset-crow')
  .arguments('<entry-file>')
  .option('--bundle-name <name>', 'bundle name. Defaults to "bundle.js"')
  .option('--bundle-format <format>', 'rollup bundle format. Defaults to "cjs"')
  .option('--target-browsers', 'set bundle to target browsers')
  .option('--browserslist <browsers...>', 'list of browsers to target, check browserl.ist. Defaults to "last 2 versions, >1%"')
  .option('--target-node', 'set bundle to target node')
  .option('--node-version <node-version>', 'node version to target. Defaults to "process.versions.node"')
  .option('--enable-loose', 'enable loose option on babel plugins')
  .option('--enable-debug', 'enable debug option on babel plugins')
  .option('--enable-spec', 'enable spec option on babel plugins')
  .option('--enable-use-built-ins', 'enable useBuiltIns option on babel plugins')
  .on('--help', console.log.bind(this,
`
  Examples:

    $ crow-scripts rollup --target-browsers --browserslist "last 1 Chrome version" "src/index.js"

`))
  .parse(process.argv)

// stop program if no arguments were passed
if (program.args.length === 0) return program.help()

const loose = !!program.enableLoose
const debug = !!program.enableDebug
const spec = !!program.enableSpec
const useBuiltIns = !!program.enableUseBuiltIns

const browserslist = program.browserslist || "last 2 versions, >1%"
const nodeVersion = program.nodeVersion || process.versions.node

const targets = {}
if (program.targetBrowsers) targets.browsers = browserslist.split(/\s*,\s*/)
if (program.targetNode) targets.node = nodeVersion

const entryFile = program.entryFile || 'src/index.js'
const bundleName = program.bundleName || 'bundle.js'
const bundleFormat = program.bundleFormat || 'cjs'

rollup({
  entryFile,
  bundleName,
  bundleFormat,
  targets,
  loose,
  debug,
  spec,
  useBuiltIns,
}).catch(() => process.exit(1))
